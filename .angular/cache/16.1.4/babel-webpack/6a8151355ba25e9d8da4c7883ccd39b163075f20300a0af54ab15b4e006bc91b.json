{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scheduleByTarget = exports.scheduleByName = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst api_1 = require(\"./api\");\nconst jobs_1 = require(\"./jobs\");\nconst progressSchema = require('./progress-schema.json');\nlet _uniqueId = 0;\nfunction scheduleByName(_x, _x2, _x3) {\n  return _scheduleByName.apply(this, arguments);\n}\nfunction _scheduleByName() {\n  _scheduleByName = _asyncToGenerator(function* (name, buildOptions, options) {\n    const childLoggerName = options.target ? `{${(0, api_1.targetStringFromTarget)(options.target)}}` : name;\n    const logger = options.logger.createChild(childLoggerName);\n    const job = options.scheduler.schedule(name, {});\n    let stateSubscription;\n    const workspaceRoot = yield options.workspaceRoot;\n    const currentDirectory = yield options.currentDirectory;\n    const description = yield (0, rxjs_1.firstValueFrom)(job.description);\n    const info = description.info;\n    const id = ++_uniqueId;\n    const message = {\n      id,\n      currentDirectory,\n      workspaceRoot,\n      info: info,\n      options: buildOptions,\n      ...(options.target ? {\n        target: options.target\n      } : {})\n    };\n    // Wait for the job to be ready.\n    if (job.state !== jobs_1.JobState.Started) {\n      stateSubscription = job.outboundBus.subscribe({\n        next: event => {\n          if (event.kind === jobs_1.JobOutboundMessageKind.Start) {\n            job.input.next(message);\n          }\n        },\n        error: () => {}\n      });\n    } else {\n      job.input.next(message);\n    }\n    const logChannelSub = job.getChannel('log').subscribe({\n      next: entry => {\n        logger.next(entry);\n      },\n      error: () => {}\n    });\n    const outboundBusSub = job.outboundBus.subscribe({\n      error() {},\n      complete() {\n        outboundBusSub.unsubscribe();\n        logChannelSub.unsubscribe();\n        stateSubscription.unsubscribe();\n      }\n    });\n    const output = job.output.pipe((0, rxjs_1.map)(output => ({\n      ...output,\n      ...(options.target ? {\n        target: options.target\n      } : 0),\n      info\n    })), (0, rxjs_1.shareReplay)());\n    // Start the builder.\n    output.pipe((0, rxjs_1.first)()).subscribe({\n      error: () => {}\n    });\n    return {\n      id,\n      info,\n      // This is a getter so that it always returns the next output, and not the same one.\n      get result() {\n        return (0, rxjs_1.firstValueFrom)(output);\n      },\n      get lastOutput() {\n        return (0, rxjs_1.lastValueFrom)(output);\n      },\n      output,\n      progress: job.getChannel('progress', progressSchema).pipe((0, rxjs_1.shareReplay)(1)),\n      stop() {\n        job.stop();\n        return job.outboundBus.pipe((0, rxjs_1.ignoreElements)(), (0, rxjs_1.catchError)(() => rxjs_1.EMPTY)).toPromise();\n      }\n    };\n  });\n  return _scheduleByName.apply(this, arguments);\n}\nexports.scheduleByName = scheduleByName;\nfunction scheduleByTarget(_x4, _x5, _x6) {\n  return _scheduleByTarget.apply(this, arguments);\n}\nfunction _scheduleByTarget() {\n  _scheduleByTarget = _asyncToGenerator(function* (target, overrides, options) {\n    return scheduleByName(`{${(0, api_1.targetStringFromTarget)(target)}}`, overrides, {\n      ...options,\n      target,\n      logger: options.logger\n    });\n  });\n  return _scheduleByTarget.apply(this, arguments);\n}\nexports.scheduleByTarget = scheduleByTarget;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","scheduleByTarget","scheduleByName","rxjs_1","api_1","jobs_1","progressSchema","_uniqueId","_x","_x2","_x3","_scheduleByName","apply","arguments","name","buildOptions","options","childLoggerName","target","targetStringFromTarget","logger","createChild","job","scheduler","schedule","stateSubscription","workspaceRoot","currentDirectory","description","firstValueFrom","info","id","message","state","JobState","Started","outboundBus","subscribe","next","event","kind","JobOutboundMessageKind","Start","input","error","logChannelSub","getChannel","entry","outboundBusSub","complete","unsubscribe","output","pipe","map","shareReplay","first","result","lastOutput","lastValueFrom","progress","stop","ignoreElements","catchError","EMPTY","toPromise","_x4","_x5","_x6","_scheduleByTarget","overrides"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@angular-devkit/architect/src/schedule-by-name.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scheduleByTarget = exports.scheduleByName = void 0;\nconst rxjs_1 = require(\"rxjs\");\nconst api_1 = require(\"./api\");\nconst jobs_1 = require(\"./jobs\");\nconst progressSchema = require('./progress-schema.json');\nlet _uniqueId = 0;\nasync function scheduleByName(name, buildOptions, options) {\n    const childLoggerName = options.target ? `{${(0, api_1.targetStringFromTarget)(options.target)}}` : name;\n    const logger = options.logger.createChild(childLoggerName);\n    const job = options.scheduler.schedule(name, {});\n    let stateSubscription;\n    const workspaceRoot = await options.workspaceRoot;\n    const currentDirectory = await options.currentDirectory;\n    const description = await (0, rxjs_1.firstValueFrom)(job.description);\n    const info = description.info;\n    const id = ++_uniqueId;\n    const message = {\n        id,\n        currentDirectory,\n        workspaceRoot,\n        info: info,\n        options: buildOptions,\n        ...(options.target ? { target: options.target } : {}),\n    };\n    // Wait for the job to be ready.\n    if (job.state !== jobs_1.JobState.Started) {\n        stateSubscription = job.outboundBus.subscribe({\n            next: (event) => {\n                if (event.kind === jobs_1.JobOutboundMessageKind.Start) {\n                    job.input.next(message);\n                }\n            },\n            error: () => { },\n        });\n    }\n    else {\n        job.input.next(message);\n    }\n    const logChannelSub = job.getChannel('log').subscribe({\n        next: (entry) => {\n            logger.next(entry);\n        },\n        error: () => { },\n    });\n    const outboundBusSub = job.outboundBus.subscribe({\n        error() { },\n        complete() {\n            outboundBusSub.unsubscribe();\n            logChannelSub.unsubscribe();\n            stateSubscription.unsubscribe();\n        },\n    });\n    const output = job.output.pipe((0, rxjs_1.map)((output) => ({\n        ...output,\n        ...(options.target ? { target: options.target } : 0),\n        info,\n    })), (0, rxjs_1.shareReplay)());\n    // Start the builder.\n    output.pipe((0, rxjs_1.first)()).subscribe({\n        error: () => { },\n    });\n    return {\n        id,\n        info,\n        // This is a getter so that it always returns the next output, and not the same one.\n        get result() {\n            return (0, rxjs_1.firstValueFrom)(output);\n        },\n        get lastOutput() {\n            return (0, rxjs_1.lastValueFrom)(output);\n        },\n        output,\n        progress: job\n            .getChannel('progress', progressSchema)\n            .pipe((0, rxjs_1.shareReplay)(1)),\n        stop() {\n            job.stop();\n            return job.outboundBus\n                .pipe((0, rxjs_1.ignoreElements)(), (0, rxjs_1.catchError)(() => rxjs_1.EMPTY))\n                .toPromise();\n        },\n    };\n}\nexports.scheduleByName = scheduleByName;\nasync function scheduleByTarget(target, overrides, options) {\n    return scheduleByName(`{${(0, api_1.targetStringFromTarget)(target)}}`, overrides, {\n        ...options,\n        target,\n        logger: options.logger,\n    });\n}\nexports.scheduleByTarget = scheduleByTarget;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}