{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TLogClient = void 0;\n/*\nCopyright 2022 The Sigstore Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nconst error_1 = require(\"../error\");\nconst external_1 = require(\"../external\");\nconst format_1 = require(\"./format\");\nclass TLogClient {\n  constructor(options) {\n    this.rekor = new external_1.Rekor({\n      baseURL: options.rekorBaseURL,\n      retry: options.retry,\n      timeout: options.timeout\n    });\n  }\n  createMessageSignatureEntry(digest, sigMaterial, options = {}) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const proposedEntry = (0, format_1.toProposedHashedRekordEntry)(digest, sigMaterial);\n      return _this.createEntry(proposedEntry, options.fetchOnConflict);\n    })();\n  }\n  createDSSEEntry(envelope, sigMaterial, options = {}) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const proposedEntry = (0, format_1.toProposedIntotoEntry)(envelope, sigMaterial);\n      return _this2.createEntry(proposedEntry, options.fetchOnConflict);\n    })();\n  }\n  createEntry(proposedEntry, fetchOnConflict = false) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      let entry;\n      try {\n        entry = yield _this3.rekor.createEntry(proposedEntry);\n      } catch (err) {\n        // If the entry already exists, fetch it (if enabled)\n        if (entryExistsError(err) && fetchOnConflict) {\n          // Grab the UUID of the existing entry from the location header\n          const uuid = err.location.split('/').pop() || '';\n          try {\n            entry = yield _this3.rekor.getEntry(uuid);\n          } catch (err) {\n            throw new error_1.InternalError({\n              code: 'TLOG_FETCH_ENTRY_ERROR',\n              message: 'error fetching tlog entry',\n              cause: err\n            });\n          }\n        } else {\n          throw new error_1.InternalError({\n            code: 'TLOG_CREATE_ENTRY_ERROR',\n            message: 'error creating tlog entry',\n            cause: err\n          });\n        }\n      }\n      return entry;\n    })();\n  }\n}\nexports.TLogClient = TLogClient;\nfunction entryExistsError(value) {\n  return value instanceof external_1.HTTPError && value.statusCode === 409 && value.location !== undefined;\n}","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","TLogClient","error_1","external_1","format_1","constructor","options","rekor","Rekor","baseURL","rekorBaseURL","retry","timeout","createMessageSignatureEntry","digest","sigMaterial","_this","proposedEntry","toProposedHashedRekordEntry","createEntry","fetchOnConflict","createDSSEEntry","envelope","_this2","toProposedIntotoEntry","_this3","entry","err","entryExistsError","uuid","location","split","pop","getEntry","InternalError","code","message","cause","HTTPError","statusCode","undefined"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/sigstore/dist/tlog/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TLogClient = void 0;\n/*\nCopyright 2022 The Sigstore Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nconst error_1 = require(\"../error\");\nconst external_1 = require(\"../external\");\nconst format_1 = require(\"./format\");\nclass TLogClient {\n    constructor(options) {\n        this.rekor = new external_1.Rekor({\n            baseURL: options.rekorBaseURL,\n            retry: options.retry,\n            timeout: options.timeout,\n        });\n    }\n    async createMessageSignatureEntry(digest, sigMaterial, options = {}) {\n        const proposedEntry = (0, format_1.toProposedHashedRekordEntry)(digest, sigMaterial);\n        return this.createEntry(proposedEntry, options.fetchOnConflict);\n    }\n    async createDSSEEntry(envelope, sigMaterial, options = {}) {\n        const proposedEntry = (0, format_1.toProposedIntotoEntry)(envelope, sigMaterial);\n        return this.createEntry(proposedEntry, options.fetchOnConflict);\n    }\n    async createEntry(proposedEntry, fetchOnConflict = false) {\n        let entry;\n        try {\n            entry = await this.rekor.createEntry(proposedEntry);\n        }\n        catch (err) {\n            // If the entry already exists, fetch it (if enabled)\n            if (entryExistsError(err) && fetchOnConflict) {\n                // Grab the UUID of the existing entry from the location header\n                const uuid = err.location.split('/').pop() || '';\n                try {\n                    entry = await this.rekor.getEntry(uuid);\n                }\n                catch (err) {\n                    throw new error_1.InternalError({\n                        code: 'TLOG_FETCH_ENTRY_ERROR',\n                        message: 'error fetching tlog entry',\n                        cause: err,\n                    });\n                }\n            }\n            else {\n                throw new error_1.InternalError({\n                    code: 'TLOG_CREATE_ENTRY_ERROR',\n                    message: 'error creating tlog entry',\n                    cause: err,\n                });\n            }\n        }\n        return entry;\n    }\n}\nexports.TLogClient = TLogClient;\nfunction entryExistsError(value) {\n    return (value instanceof external_1.HTTPError &&\n        value.statusCode === 409 &&\n        value.location !== undefined);\n}\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA,gIAAAC,OAAA;AACbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAG,KAAK,CAAC;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAGP,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMQ,UAAU,GAAGR,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMS,QAAQ,GAAGT,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMM,UAAU,CAAC;EACbI,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,KAAK,GAAG,IAAIJ,UAAU,CAACK,KAAK,CAAC;MAC9BC,OAAO,EAAEH,OAAO,CAACI,YAAY;MAC7BC,KAAK,EAAEL,OAAO,CAACK,KAAK;MACpBC,OAAO,EAAEN,OAAO,CAACM;IACrB,CAAC,CAAC;EACN;EACMC,2BAA2BA,CAACC,MAAM,EAAEC,WAAW,EAAET,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA,IAAAU,KAAA;IAAA,OAAAtB,iBAAA;MACjE,MAAMuB,aAAa,GAAG,CAAC,CAAC,EAAEb,QAAQ,CAACc,2BAA2B,EAAEJ,MAAM,EAAEC,WAAW,CAAC;MACpF,OAAOC,KAAI,CAACG,WAAW,CAACF,aAAa,EAAEX,OAAO,CAACc,eAAe,CAAC;IAAC;EACpE;EACMC,eAAeA,CAACC,QAAQ,EAAEP,WAAW,EAAET,OAAO,GAAG,CAAC,CAAC,EAAE;IAAA,IAAAiB,MAAA;IAAA,OAAA7B,iBAAA;MACvD,MAAMuB,aAAa,GAAG,CAAC,CAAC,EAAEb,QAAQ,CAACoB,qBAAqB,EAAEF,QAAQ,EAAEP,WAAW,CAAC;MAChF,OAAOQ,MAAI,CAACJ,WAAW,CAACF,aAAa,EAAEX,OAAO,CAACc,eAAe,CAAC;IAAC;EACpE;EACMD,WAAWA,CAACF,aAAa,EAAEG,eAAe,GAAG,KAAK,EAAE;IAAA,IAAAK,MAAA;IAAA,OAAA/B,iBAAA;MACtD,IAAIgC,KAAK;MACT,IAAI;QACAA,KAAK,SAASD,MAAI,CAAClB,KAAK,CAACY,WAAW,CAACF,aAAa,CAAC;MACvD,CAAC,CACD,OAAOU,GAAG,EAAE;QACR;QACA,IAAIC,gBAAgB,CAACD,GAAG,CAAC,IAAIP,eAAe,EAAE;UAC1C;UACA,MAAMS,IAAI,GAAGF,GAAG,CAACG,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,IAAI,EAAE;UAChD,IAAI;YACAN,KAAK,SAASD,MAAI,CAAClB,KAAK,CAAC0B,QAAQ,CAACJ,IAAI,CAAC;UAC3C,CAAC,CACD,OAAOF,GAAG,EAAE;YACR,MAAM,IAAIzB,OAAO,CAACgC,aAAa,CAAC;cAC5BC,IAAI,EAAE,wBAAwB;cAC9BC,OAAO,EAAE,2BAA2B;cACpCC,KAAK,EAAEV;YACX,CAAC,CAAC;UACN;QACJ,CAAC,MACI;UACD,MAAM,IAAIzB,OAAO,CAACgC,aAAa,CAAC;YAC5BC,IAAI,EAAE,yBAAyB;YAC/BC,OAAO,EAAE,2BAA2B;YACpCC,KAAK,EAAEV;UACX,CAAC,CAAC;QACN;MACJ;MACA,OAAOD,KAAK;IAAC;EACjB;AACJ;AACA3B,OAAO,CAACE,UAAU,GAAGA,UAAU;AAC/B,SAAS2B,gBAAgBA,CAAC5B,KAAK,EAAE;EAC7B,OAAQA,KAAK,YAAYG,UAAU,CAACmC,SAAS,IACzCtC,KAAK,CAACuC,UAAU,KAAK,GAAG,IACxBvC,KAAK,CAAC8B,QAAQ,KAAKU,SAAS;AACpC"},"metadata":{},"sourceType":"script","externalDependencies":[]}