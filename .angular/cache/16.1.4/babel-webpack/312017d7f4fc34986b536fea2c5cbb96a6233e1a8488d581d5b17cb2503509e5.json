{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Rekor = void 0;\n/*\nCopyright 2022 The Sigstore Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nconst make_fetch_happen_1 = __importDefault(require(\"make-fetch-happen\"));\nconst util_1 = require(\"../util\");\nconst error_1 = require(\"./error\");\n/**\n * Rekor API client.\n */\nclass Rekor {\n  constructor(options) {\n    this.fetch = make_fetch_happen_1.default.defaults({\n      retry: options.retry,\n      timeout: options.timeout,\n      headers: {\n        Accept: 'application/json',\n        'User-Agent': util_1.ua.getUserAgent()\n      }\n    });\n    this.baseUrl = options.baseURL;\n  }\n  /**\n   * Create a new entry in the Rekor log.\n   * @param propsedEntry {ProposedEntry} Data to create a new entry\n   * @returns {Promise<Entry>} The created entry\n   */\n  createEntry(propsedEntry) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const url = `${_this.baseUrl}/api/v1/log/entries`;\n      const response = yield _this.fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(propsedEntry)\n      });\n      (0, error_1.checkStatus)(response);\n      const data = yield response.json();\n      return entryFromResponse(data);\n    })();\n  }\n  /**\n   * Get an entry from the Rekor log.\n   * @param uuid {string} The UUID of the entry to retrieve\n   * @returns {Promise<Entry>} The retrieved entry\n   */\n  getEntry(uuid) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const url = `${_this2.baseUrl}/api/v1/log/entries/${uuid}`;\n      const response = yield _this2.fetch(url);\n      (0, error_1.checkStatus)(response);\n      const data = yield response.json();\n      return entryFromResponse(data);\n    })();\n  }\n  /**\n   * Search the Rekor log index for entries matching the given query.\n   * @param opts {SearchIndex} Options to search the Rekor log\n   * @returns {Promise<string[]>} UUIDs of matching entries\n   */\n  searchIndex(opts) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const url = `${_this3.baseUrl}/api/v1/index/retrieve`;\n      const response = yield _this3.fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(opts),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      (0, error_1.checkStatus)(response);\n      const data = yield response.json();\n      return data;\n    })();\n  }\n  /**\n   * Search the Rekor logs for matching the given query.\n   * @param opts {SearchLogQuery} Query to search the Rekor log\n   * @returns {Promise<Entry[]>} List of matching entries\n   */\n  searchLog(opts) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const url = `${_this4.baseUrl}/api/v1/log/entries/retrieve`;\n      const response = yield _this4.fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(opts),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      (0, error_1.checkStatus)(response);\n      const rawData = yield response.json();\n      const data = rawData.map(d => entryFromResponse(d));\n      return data;\n    })();\n  }\n}\nexports.Rekor = Rekor;\n// Unpack the response from the Rekor API into a more convenient format.\nfunction entryFromResponse(data) {\n  const entries = Object.entries(data);\n  if (entries.length != 1) {\n    throw new Error('Received multiple entries in Rekor response');\n  }\n  // Grab UUID and entry data from the response\n  const [uuid, entry] = entries[0];\n  return {\n    ...entry,\n    uuid\n  };\n}","map":{"version":3,"names":["_asyncToGenerator","require","default","__importDefault","mod","__esModule","Object","defineProperty","exports","value","Rekor","make_fetch_happen_1","util_1","error_1","constructor","options","fetch","defaults","retry","timeout","headers","Accept","ua","getUserAgent","baseUrl","baseURL","createEntry","propsedEntry","_this","url","response","method","body","JSON","stringify","checkStatus","data","json","entryFromResponse","getEntry","uuid","_this2","searchIndex","opts","_this3","searchLog","_this4","rawData","map","d","entries","length","Error","entry"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/sigstore/dist/external/rekor.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Rekor = void 0;\n/*\nCopyright 2022 The Sigstore Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nconst make_fetch_happen_1 = __importDefault(require(\"make-fetch-happen\"));\nconst util_1 = require(\"../util\");\nconst error_1 = require(\"./error\");\n/**\n * Rekor API client.\n */\nclass Rekor {\n    constructor(options) {\n        this.fetch = make_fetch_happen_1.default.defaults({\n            retry: options.retry,\n            timeout: options.timeout,\n            headers: {\n                Accept: 'application/json',\n                'User-Agent': util_1.ua.getUserAgent(),\n            },\n        });\n        this.baseUrl = options.baseURL;\n    }\n    /**\n     * Create a new entry in the Rekor log.\n     * @param propsedEntry {ProposedEntry} Data to create a new entry\n     * @returns {Promise<Entry>} The created entry\n     */\n    async createEntry(propsedEntry) {\n        const url = `${this.baseUrl}/api/v1/log/entries`;\n        const response = await this.fetch(url, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(propsedEntry),\n        });\n        (0, error_1.checkStatus)(response);\n        const data = await response.json();\n        return entryFromResponse(data);\n    }\n    /**\n     * Get an entry from the Rekor log.\n     * @param uuid {string} The UUID of the entry to retrieve\n     * @returns {Promise<Entry>} The retrieved entry\n     */\n    async getEntry(uuid) {\n        const url = `${this.baseUrl}/api/v1/log/entries/${uuid}`;\n        const response = await this.fetch(url);\n        (0, error_1.checkStatus)(response);\n        const data = await response.json();\n        return entryFromResponse(data);\n    }\n    /**\n     * Search the Rekor log index for entries matching the given query.\n     * @param opts {SearchIndex} Options to search the Rekor log\n     * @returns {Promise<string[]>} UUIDs of matching entries\n     */\n    async searchIndex(opts) {\n        const url = `${this.baseUrl}/api/v1/index/retrieve`;\n        const response = await this.fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(opts),\n            headers: { 'Content-Type': 'application/json' },\n        });\n        (0, error_1.checkStatus)(response);\n        const data = await response.json();\n        return data;\n    }\n    /**\n     * Search the Rekor logs for matching the given query.\n     * @param opts {SearchLogQuery} Query to search the Rekor log\n     * @returns {Promise<Entry[]>} List of matching entries\n     */\n    async searchLog(opts) {\n        const url = `${this.baseUrl}/api/v1/log/entries/retrieve`;\n        const response = await this.fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(opts),\n            headers: { 'Content-Type': 'application/json' },\n        });\n        (0, error_1.checkStatus)(response);\n        const rawData = await response.json();\n        const data = rawData.map((d) => entryFromResponse(d));\n        return data;\n    }\n}\nexports.Rekor = Rekor;\n// Unpack the response from the Rekor API into a more convenient format.\nfunction entryFromResponse(data) {\n    const entries = Object.entries(data);\n    if (entries.length != 1) {\n        throw new Error('Received multiple entries in Rekor response');\n    }\n    // Grab UUID and entry data from the response\n    const [uuid, entry] = entries[0];\n    return {\n        ...entry,\n        uuid,\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}