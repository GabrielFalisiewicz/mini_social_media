{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Signature = exports.Envelope = void 0;\nfunction createBaseEnvelope() {\n  return {\n    payload: Buffer.alloc(0),\n    payloadType: \"\",\n    signatures: []\n  };\n}\nexports.Envelope = {\n  fromJSON(object) {\n    return {\n      payload: isSet(object.payload) ? Buffer.from(bytesFromBase64(object.payload)) : Buffer.alloc(0),\n      payloadType: isSet(object.payloadType) ? String(object.payloadType) : \"\",\n      signatures: Array.isArray(object?.signatures) ? object.signatures.map(e => exports.Signature.fromJSON(e)) : []\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.payload !== undefined && (obj.payload = base64FromBytes(message.payload !== undefined ? message.payload : Buffer.alloc(0)));\n    message.payloadType !== undefined && (obj.payloadType = message.payloadType);\n    if (message.signatures) {\n      obj.signatures = message.signatures.map(e => e ? exports.Signature.toJSON(e) : undefined);\n    } else {\n      obj.signatures = [];\n    }\n    return obj;\n  }\n};\nfunction createBaseSignature() {\n  return {\n    sig: Buffer.alloc(0),\n    keyid: \"\"\n  };\n}\nexports.Signature = {\n  fromJSON(object) {\n    return {\n      sig: isSet(object.sig) ? Buffer.from(bytesFromBase64(object.sig)) : Buffer.alloc(0),\n      keyid: isSet(object.keyid) ? String(object.keyid) : \"\"\n    };\n  },\n  toJSON(message) {\n    const obj = {};\n    message.sig !== undefined && (obj.sig = base64FromBytes(message.sig !== undefined ? message.sig : Buffer.alloc(0)));\n    message.keyid !== undefined && (obj.keyid = message.keyid);\n    return obj;\n  }\n};\nvar globalThis = (() => {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n  if (typeof global !== \"undefined\") {\n    return global;\n  }\n  throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n  if (globalThis.Buffer) {\n    return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n  } else {\n    const bin = globalThis.atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n      arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n  }\n}\nfunction base64FromBytes(arr) {\n  if (globalThis.Buffer) {\n    return globalThis.Buffer.from(arr).toString(\"base64\");\n  } else {\n    const bin = [];\n    arr.forEach(byte => {\n      bin.push(String.fromCharCode(byte));\n    });\n    return globalThis.btoa(bin.join(\"\"));\n  }\n}\nfunction isSet(value) {\n  return value !== null && value !== undefined;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Signature","Envelope","createBaseEnvelope","payload","Buffer","alloc","payloadType","signatures","fromJSON","object","isSet","from","bytesFromBase64","String","Array","isArray","map","e","toJSON","message","obj","undefined","base64FromBytes","createBaseSignature","sig","keyid","globalThis","self","window","global","b64","Uint8Array","bin","atob","arr","length","i","charCodeAt","toString","forEach","byte","push","fromCharCode","btoa","join"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@sigstore/protobuf-specs/dist/__generated__/envelope.js"],"sourcesContent":["\"use strict\";\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signature = exports.Envelope = void 0;\nfunction createBaseEnvelope() {\n    return { payload: Buffer.alloc(0), payloadType: \"\", signatures: [] };\n}\nexports.Envelope = {\n    fromJSON(object) {\n        return {\n            payload: isSet(object.payload) ? Buffer.from(bytesFromBase64(object.payload)) : Buffer.alloc(0),\n            payloadType: isSet(object.payloadType) ? String(object.payloadType) : \"\",\n            signatures: Array.isArray(object?.signatures) ? object.signatures.map((e) => exports.Signature.fromJSON(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.payload !== undefined &&\n            (obj.payload = base64FromBytes(message.payload !== undefined ? message.payload : Buffer.alloc(0)));\n        message.payloadType !== undefined && (obj.payloadType = message.payloadType);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? exports.Signature.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n};\nfunction createBaseSignature() {\n    return { sig: Buffer.alloc(0), keyid: \"\" };\n}\nexports.Signature = {\n    fromJSON(object) {\n        return {\n            sig: isSet(object.sig) ? Buffer.from(bytesFromBase64(object.sig)) : Buffer.alloc(0),\n            keyid: isSet(object.keyid) ? String(object.keyid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sig !== undefined && (obj.sig = base64FromBytes(message.sig !== undefined ? message.sig : Buffer.alloc(0)));\n        message.keyid !== undefined && (obj.keyid = message.keyid);\n        return obj;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    throw \"Unable to locate global object\";\n})();\nfunction bytesFromBase64(b64) {\n    if (globalThis.Buffer) {\n        return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n    }\n    else {\n        const bin = globalThis.atob(b64);\n        const arr = new Uint8Array(bin.length);\n        for (let i = 0; i < bin.length; ++i) {\n            arr[i] = bin.charCodeAt(i);\n        }\n        return arr;\n    }\n}\nfunction base64FromBytes(arr) {\n    if (globalThis.Buffer) {\n        return globalThis.Buffer.from(arr).toString(\"base64\");\n    }\n    else {\n        const bin = [];\n        arr.forEach((byte) => {\n            bin.push(String.fromCharCode(byte));\n        });\n        return globalThis.btoa(bin.join(\"\"));\n    }\n}\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}