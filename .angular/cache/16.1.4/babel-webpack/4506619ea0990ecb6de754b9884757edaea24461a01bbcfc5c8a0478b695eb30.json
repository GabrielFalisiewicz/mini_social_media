{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _asyncToGenerator = require(\"C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PackageManagerUtils = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst child_process_1 = require(\"child_process\");\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nconst semver_1 = require(\"semver\");\nconst workspace_schema_1 = require(\"../../lib/config/workspace-schema\");\nconst config_1 = require(\"./config\");\nconst memoize_1 = require(\"./memoize\");\nconst spinner_1 = require(\"./spinner\");\nclass PackageManagerUtils {\n  constructor(context) {\n    this.context = context;\n  }\n  /** Get the package manager name. */\n  get name() {\n    return this.getName();\n  }\n  /** Get the package manager version. */\n  get version() {\n    return this.getVersion(this.name);\n  }\n  /**\n   * Checks if the package manager is supported. If not, display a warning.\n   */\n  ensureCompatibility() {\n    if (this.name !== workspace_schema_1.PackageManager.Npm) {\n      return;\n    }\n    try {\n      const version = (0, semver_1.valid)(this.version);\n      if (!version) {\n        return;\n      }\n      if ((0, semver_1.satisfies)(version, '>=7 <7.5.6')) {\n        // eslint-disable-next-line no-console\n        console.warn(`npm version ${version} detected.` + ' When using npm 7 with the Angular CLI, npm version 7.5.6 or higher is recommended.');\n      }\n    } catch {\n      // npm is not installed.\n    }\n  }\n  /** Install a single package. */\n  install(packageName, save = true, extraArgs = [], cwd) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const packageManagerArgs = _this.getArguments();\n      const installArgs = [packageManagerArgs.install, packageName];\n      if (save === 'devDependencies') {\n        installArgs.push(packageManagerArgs.saveDev);\n      }\n      return _this.run([...installArgs, ...extraArgs], {\n        cwd,\n        silent: true\n      });\n    })();\n  }\n  /** Install all packages. */\n  installAll(extraArgs = [], cwd) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const packageManagerArgs = _this2.getArguments();\n      const installArgs = [];\n      if (packageManagerArgs.installAll) {\n        installArgs.push(packageManagerArgs.installAll);\n      }\n      return _this2.run([...installArgs, ...extraArgs], {\n        cwd,\n        silent: true\n      });\n    })();\n  }\n  /** Install a single package temporary. */\n  installTemp(packageName, extraArgs) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const tempPath = yield fs_1.promises.mkdtemp((0, path_1.join)((0, fs_1.realpathSync)((0, os_1.tmpdir)()), 'angular-cli-packages-'));\n      // clean up temp directory on process exit\n      process.on('exit', () => {\n        try {\n          (0, fs_1.rmSync)(tempPath, {\n            recursive: true,\n            maxRetries: 3\n          });\n        } catch {}\n      });\n      // NPM will warn when a `package.json` is not found in the install directory\n      // Example:\n      // npm WARN enoent ENOENT: no such file or directory, open '/tmp/.ng-temp-packages-84Qi7y/package.json'\n      // npm WARN .ng-temp-packages-84Qi7y No description\n      // npm WARN .ng-temp-packages-84Qi7y No repository field.\n      // npm WARN .ng-temp-packages-84Qi7y No license field.\n      // While we can use `npm init -y` we will end up needing to update the 'package.json' anyways\n      // because of missing fields.\n      yield fs_1.promises.writeFile((0, path_1.join)(tempPath, 'package.json'), JSON.stringify({\n        name: 'temp-cli-install',\n        description: 'temp-cli-install',\n        repository: 'temp-cli-install',\n        license: 'MIT'\n      }));\n      // setup prefix/global modules path\n      const packageManagerArgs = _this3.getArguments();\n      const tempNodeModules = (0, path_1.join)(tempPath, 'node_modules');\n      // Yarn will not append 'node_modules' to the path\n      const prefixPath = _this3.name === workspace_schema_1.PackageManager.Yarn ? tempNodeModules : tempPath;\n      const installArgs = [...(extraArgs ?? []), `${packageManagerArgs.prefix}=\"${prefixPath}\"`, packageManagerArgs.noLockfile];\n      return {\n        success: yield _this3.install(packageName, true, installArgs, tempPath),\n        tempNodeModules\n      };\n    })();\n  }\n  getArguments() {\n    switch (this.name) {\n      case workspace_schema_1.PackageManager.Yarn:\n        return {\n          saveDev: '--dev',\n          install: 'add',\n          prefix: '--modules-folder',\n          noLockfile: '--no-lockfile'\n        };\n      case workspace_schema_1.PackageManager.Pnpm:\n        return {\n          saveDev: '--save-dev',\n          install: 'add',\n          installAll: 'install',\n          prefix: '--prefix',\n          noLockfile: '--no-lockfile'\n        };\n      default:\n        return {\n          saveDev: '--save-dev',\n          install: 'install',\n          installAll: 'install',\n          prefix: '--prefix',\n          noLockfile: '--no-package-lock'\n        };\n    }\n  }\n  run(args, options = {}) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        cwd = process.cwd(),\n        silent = false\n      } = options;\n      const spinner = new spinner_1.Spinner();\n      spinner.start('Installing packages...');\n      return new Promise(resolve => {\n        const bufferedOutput = [];\n        const childProcess = (0, child_process_1.spawn)(_this4.name, args, {\n          // Always pipe stderr to allow for failures to be reported\n          stdio: silent ? ['ignore', 'ignore', 'pipe'] : 'pipe',\n          shell: true,\n          cwd\n        }).on('close', code => {\n          if (code === 0) {\n            spinner.succeed('Packages successfully installed.');\n            resolve(true);\n          } else {\n            spinner.stop();\n            bufferedOutput.forEach(({\n              stream,\n              data\n            }) => stream.write(data));\n            spinner.fail('Packages installation failed, see above.');\n            resolve(false);\n          }\n        });\n        childProcess.stdout?.on('data', data => bufferedOutput.push({\n          stream: process.stdout,\n          data: data\n        }));\n        childProcess.stderr?.on('data', data => bufferedOutput.push({\n          stream: process.stderr,\n          data: data\n        }));\n      });\n    })();\n  }\n  getVersion(name) {\n    try {\n      return (0, child_process_1.execSync)(`${name} --version`, {\n        encoding: 'utf8',\n        stdio: ['ignore', 'pipe', 'ignore'],\n        env: {\n          ...process.env,\n          //  NPM updater notifier will prevents the child process from closing until it timeout after 3 minutes.\n          NO_UPDATE_NOTIFIER: '1',\n          NPM_CONFIG_UPDATE_NOTIFIER: 'false'\n        }\n      }).trim();\n    } catch {\n      return undefined;\n    }\n  }\n  getName() {\n    const packageManager = this.getConfiguredPackageManager();\n    if (packageManager) {\n      return packageManager;\n    }\n    const hasNpmLock = this.hasLockfile(workspace_schema_1.PackageManager.Npm);\n    const hasYarnLock = this.hasLockfile(workspace_schema_1.PackageManager.Yarn);\n    const hasPnpmLock = this.hasLockfile(workspace_schema_1.PackageManager.Pnpm);\n    // PERF NOTE: `this.getVersion` spawns the package a the child_process which can take around ~300ms at times.\n    // Therefore, we should only call this method when needed. IE: don't call `this.getVersion(PackageManager.Pnpm)` unless truly needed.\n    // The result of this method is not stored in a variable because it's memoized.\n    if (hasNpmLock) {\n      // Has NPM lock file.\n      if (!hasYarnLock && !hasPnpmLock && this.getVersion(workspace_schema_1.PackageManager.Npm)) {\n        // Only NPM lock file and NPM binary is available.\n        return workspace_schema_1.PackageManager.Npm;\n      }\n    } else {\n      // No NPM lock file.\n      if (hasYarnLock && this.getVersion(workspace_schema_1.PackageManager.Yarn)) {\n        // Yarn lock file and Yarn binary is available.\n        return workspace_schema_1.PackageManager.Yarn;\n      } else if (hasPnpmLock && this.getVersion(workspace_schema_1.PackageManager.Pnpm)) {\n        // PNPM lock file and PNPM binary is available.\n        return workspace_schema_1.PackageManager.Pnpm;\n      }\n    }\n    if (!this.getVersion(workspace_schema_1.PackageManager.Npm)) {\n      // Doesn't have NPM installed.\n      const hasYarn = !!this.getVersion(workspace_schema_1.PackageManager.Yarn);\n      const hasPnpm = !!this.getVersion(workspace_schema_1.PackageManager.Pnpm);\n      if (hasYarn && !hasPnpm) {\n        return workspace_schema_1.PackageManager.Yarn;\n      } else if (!hasYarn && hasPnpm) {\n        return workspace_schema_1.PackageManager.Pnpm;\n      }\n    }\n    // TODO: This should eventually inform the user of ambiguous package manager usage.\n    //       Potentially with a prompt to choose and optionally set as the default.\n    return workspace_schema_1.PackageManager.Npm;\n  }\n  hasLockfile(packageManager) {\n    let lockfileName;\n    switch (packageManager) {\n      case workspace_schema_1.PackageManager.Yarn:\n        lockfileName = 'yarn.lock';\n        break;\n      case workspace_schema_1.PackageManager.Pnpm:\n        lockfileName = 'pnpm-lock.yaml';\n        break;\n      case workspace_schema_1.PackageManager.Npm:\n      default:\n        lockfileName = 'package-lock.json';\n        break;\n    }\n    return (0, fs_1.existsSync)((0, path_1.join)(this.context.root, lockfileName));\n  }\n  getConfiguredPackageManager() {\n    const getPackageManager = source => {\n      if (source && (0, core_1.isJsonObject)(source)) {\n        const value = source['packageManager'];\n        if (typeof value === 'string') {\n          return value;\n        }\n      }\n      return undefined;\n    };\n    let result;\n    const {\n      workspace: localWorkspace,\n      globalConfiguration: globalWorkspace\n    } = this.context;\n    if (localWorkspace) {\n      const project = (0, config_1.getProjectByCwd)(localWorkspace);\n      if (project) {\n        result = getPackageManager(localWorkspace.projects.get(project)?.extensions['cli']);\n      }\n      result ?? (result = getPackageManager(localWorkspace.extensions['cli']));\n    }\n    if (!result) {\n      result = getPackageManager(globalWorkspace.extensions['cli']);\n    }\n    return result;\n  }\n}\nexports.PackageManagerUtils = PackageManagerUtils;\n__decorate([memoize_1.memoize, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [String]), __metadata(\"design:returntype\", Object)], PackageManagerUtils.prototype, \"getVersion\", null);\n__decorate([memoize_1.memoize, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", String)], PackageManagerUtils.prototype, \"getName\", null);","map":{"version":3,"names":["_asyncToGenerator","require","default","__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","exports","value","PackageManagerUtils","core_1","child_process_1","fs_1","os_1","path_1","semver_1","workspace_schema_1","config_1","memoize_1","spinner_1","constructor","context","name","getName","version","getVersion","ensureCompatibility","PackageManager","Npm","valid","satisfies","console","warn","install","packageName","save","extraArgs","cwd","_this","packageManagerArgs","getArguments","installArgs","push","saveDev","run","silent","installAll","_this2","installTemp","_this3","tempPath","promises","mkdtemp","join","realpathSync","tmpdir","process","on","rmSync","recursive","maxRetries","writeFile","JSON","stringify","description","repository","license","tempNodeModules","prefixPath","Yarn","prefix","noLockfile","success","Pnpm","args","options","_this4","spinner","Spinner","start","Promise","resolve","bufferedOutput","childProcess","spawn","stdio","shell","code","succeed","stop","forEach","stream","data","write","fail","stdout","stderr","execSync","encoding","env","NO_UPDATE_NOTIFIER","NPM_CONFIG_UPDATE_NOTIFIER","trim","undefined","packageManager","getConfiguredPackageManager","hasNpmLock","hasLockfile","hasYarnLock","hasPnpmLock","hasYarn","hasPnpm","lockfileName","existsSync","root","getPackageManager","source","isJsonObject","result","workspace","localWorkspace","globalConfiguration","globalWorkspace","project","getProjectByCwd","projects","get","extensions","memoize","Function","String","prototype"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@angular/cli/src/utilities/package-manager.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PackageManagerUtils = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst child_process_1 = require(\"child_process\");\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nconst semver_1 = require(\"semver\");\nconst workspace_schema_1 = require(\"../../lib/config/workspace-schema\");\nconst config_1 = require(\"./config\");\nconst memoize_1 = require(\"./memoize\");\nconst spinner_1 = require(\"./spinner\");\nclass PackageManagerUtils {\n    constructor(context) {\n        this.context = context;\n    }\n    /** Get the package manager name. */\n    get name() {\n        return this.getName();\n    }\n    /** Get the package manager version. */\n    get version() {\n        return this.getVersion(this.name);\n    }\n    /**\n     * Checks if the package manager is supported. If not, display a warning.\n     */\n    ensureCompatibility() {\n        if (this.name !== workspace_schema_1.PackageManager.Npm) {\n            return;\n        }\n        try {\n            const version = (0, semver_1.valid)(this.version);\n            if (!version) {\n                return;\n            }\n            if ((0, semver_1.satisfies)(version, '>=7 <7.5.6')) {\n                // eslint-disable-next-line no-console\n                console.warn(`npm version ${version} detected.` +\n                    ' When using npm 7 with the Angular CLI, npm version 7.5.6 or higher is recommended.');\n            }\n        }\n        catch {\n            // npm is not installed.\n        }\n    }\n    /** Install a single package. */\n    async install(packageName, save = true, extraArgs = [], cwd) {\n        const packageManagerArgs = this.getArguments();\n        const installArgs = [packageManagerArgs.install, packageName];\n        if (save === 'devDependencies') {\n            installArgs.push(packageManagerArgs.saveDev);\n        }\n        return this.run([...installArgs, ...extraArgs], { cwd, silent: true });\n    }\n    /** Install all packages. */\n    async installAll(extraArgs = [], cwd) {\n        const packageManagerArgs = this.getArguments();\n        const installArgs = [];\n        if (packageManagerArgs.installAll) {\n            installArgs.push(packageManagerArgs.installAll);\n        }\n        return this.run([...installArgs, ...extraArgs], { cwd, silent: true });\n    }\n    /** Install a single package temporary. */\n    async installTemp(packageName, extraArgs) {\n        const tempPath = await fs_1.promises.mkdtemp((0, path_1.join)((0, fs_1.realpathSync)((0, os_1.tmpdir)()), 'angular-cli-packages-'));\n        // clean up temp directory on process exit\n        process.on('exit', () => {\n            try {\n                (0, fs_1.rmSync)(tempPath, { recursive: true, maxRetries: 3 });\n            }\n            catch { }\n        });\n        // NPM will warn when a `package.json` is not found in the install directory\n        // Example:\n        // npm WARN enoent ENOENT: no such file or directory, open '/tmp/.ng-temp-packages-84Qi7y/package.json'\n        // npm WARN .ng-temp-packages-84Qi7y No description\n        // npm WARN .ng-temp-packages-84Qi7y No repository field.\n        // npm WARN .ng-temp-packages-84Qi7y No license field.\n        // While we can use `npm init -y` we will end up needing to update the 'package.json' anyways\n        // because of missing fields.\n        await fs_1.promises.writeFile((0, path_1.join)(tempPath, 'package.json'), JSON.stringify({\n            name: 'temp-cli-install',\n            description: 'temp-cli-install',\n            repository: 'temp-cli-install',\n            license: 'MIT',\n        }));\n        // setup prefix/global modules path\n        const packageManagerArgs = this.getArguments();\n        const tempNodeModules = (0, path_1.join)(tempPath, 'node_modules');\n        // Yarn will not append 'node_modules' to the path\n        const prefixPath = this.name === workspace_schema_1.PackageManager.Yarn ? tempNodeModules : tempPath;\n        const installArgs = [\n            ...(extraArgs ?? []),\n            `${packageManagerArgs.prefix}=\"${prefixPath}\"`,\n            packageManagerArgs.noLockfile,\n        ];\n        return {\n            success: await this.install(packageName, true, installArgs, tempPath),\n            tempNodeModules,\n        };\n    }\n    getArguments() {\n        switch (this.name) {\n            case workspace_schema_1.PackageManager.Yarn:\n                return {\n                    saveDev: '--dev',\n                    install: 'add',\n                    prefix: '--modules-folder',\n                    noLockfile: '--no-lockfile',\n                };\n            case workspace_schema_1.PackageManager.Pnpm:\n                return {\n                    saveDev: '--save-dev',\n                    install: 'add',\n                    installAll: 'install',\n                    prefix: '--prefix',\n                    noLockfile: '--no-lockfile',\n                };\n            default:\n                return {\n                    saveDev: '--save-dev',\n                    install: 'install',\n                    installAll: 'install',\n                    prefix: '--prefix',\n                    noLockfile: '--no-package-lock',\n                };\n        }\n    }\n    async run(args, options = {}) {\n        const { cwd = process.cwd(), silent = false } = options;\n        const spinner = new spinner_1.Spinner();\n        spinner.start('Installing packages...');\n        return new Promise((resolve) => {\n            const bufferedOutput = [];\n            const childProcess = (0, child_process_1.spawn)(this.name, args, {\n                // Always pipe stderr to allow for failures to be reported\n                stdio: silent ? ['ignore', 'ignore', 'pipe'] : 'pipe',\n                shell: true,\n                cwd,\n            }).on('close', (code) => {\n                if (code === 0) {\n                    spinner.succeed('Packages successfully installed.');\n                    resolve(true);\n                }\n                else {\n                    spinner.stop();\n                    bufferedOutput.forEach(({ stream, data }) => stream.write(data));\n                    spinner.fail('Packages installation failed, see above.');\n                    resolve(false);\n                }\n            });\n            childProcess.stdout?.on('data', (data) => bufferedOutput.push({ stream: process.stdout, data: data }));\n            childProcess.stderr?.on('data', (data) => bufferedOutput.push({ stream: process.stderr, data: data }));\n        });\n    }\n    getVersion(name) {\n        try {\n            return (0, child_process_1.execSync)(`${name} --version`, {\n                encoding: 'utf8',\n                stdio: ['ignore', 'pipe', 'ignore'],\n                env: {\n                    ...process.env,\n                    //  NPM updater notifier will prevents the child process from closing until it timeout after 3 minutes.\n                    NO_UPDATE_NOTIFIER: '1',\n                    NPM_CONFIG_UPDATE_NOTIFIER: 'false',\n                },\n            }).trim();\n        }\n        catch {\n            return undefined;\n        }\n    }\n    getName() {\n        const packageManager = this.getConfiguredPackageManager();\n        if (packageManager) {\n            return packageManager;\n        }\n        const hasNpmLock = this.hasLockfile(workspace_schema_1.PackageManager.Npm);\n        const hasYarnLock = this.hasLockfile(workspace_schema_1.PackageManager.Yarn);\n        const hasPnpmLock = this.hasLockfile(workspace_schema_1.PackageManager.Pnpm);\n        // PERF NOTE: `this.getVersion` spawns the package a the child_process which can take around ~300ms at times.\n        // Therefore, we should only call this method when needed. IE: don't call `this.getVersion(PackageManager.Pnpm)` unless truly needed.\n        // The result of this method is not stored in a variable because it's memoized.\n        if (hasNpmLock) {\n            // Has NPM lock file.\n            if (!hasYarnLock && !hasPnpmLock && this.getVersion(workspace_schema_1.PackageManager.Npm)) {\n                // Only NPM lock file and NPM binary is available.\n                return workspace_schema_1.PackageManager.Npm;\n            }\n        }\n        else {\n            // No NPM lock file.\n            if (hasYarnLock && this.getVersion(workspace_schema_1.PackageManager.Yarn)) {\n                // Yarn lock file and Yarn binary is available.\n                return workspace_schema_1.PackageManager.Yarn;\n            }\n            else if (hasPnpmLock && this.getVersion(workspace_schema_1.PackageManager.Pnpm)) {\n                // PNPM lock file and PNPM binary is available.\n                return workspace_schema_1.PackageManager.Pnpm;\n            }\n        }\n        if (!this.getVersion(workspace_schema_1.PackageManager.Npm)) {\n            // Doesn't have NPM installed.\n            const hasYarn = !!this.getVersion(workspace_schema_1.PackageManager.Yarn);\n            const hasPnpm = !!this.getVersion(workspace_schema_1.PackageManager.Pnpm);\n            if (hasYarn && !hasPnpm) {\n                return workspace_schema_1.PackageManager.Yarn;\n            }\n            else if (!hasYarn && hasPnpm) {\n                return workspace_schema_1.PackageManager.Pnpm;\n            }\n        }\n        // TODO: This should eventually inform the user of ambiguous package manager usage.\n        //       Potentially with a prompt to choose and optionally set as the default.\n        return workspace_schema_1.PackageManager.Npm;\n    }\n    hasLockfile(packageManager) {\n        let lockfileName;\n        switch (packageManager) {\n            case workspace_schema_1.PackageManager.Yarn:\n                lockfileName = 'yarn.lock';\n                break;\n            case workspace_schema_1.PackageManager.Pnpm:\n                lockfileName = 'pnpm-lock.yaml';\n                break;\n            case workspace_schema_1.PackageManager.Npm:\n            default:\n                lockfileName = 'package-lock.json';\n                break;\n        }\n        return (0, fs_1.existsSync)((0, path_1.join)(this.context.root, lockfileName));\n    }\n    getConfiguredPackageManager() {\n        const getPackageManager = (source) => {\n            if (source && (0, core_1.isJsonObject)(source)) {\n                const value = source['packageManager'];\n                if (typeof value === 'string') {\n                    return value;\n                }\n            }\n            return undefined;\n        };\n        let result;\n        const { workspace: localWorkspace, globalConfiguration: globalWorkspace } = this.context;\n        if (localWorkspace) {\n            const project = (0, config_1.getProjectByCwd)(localWorkspace);\n            if (project) {\n                result = getPackageManager(localWorkspace.projects.get(project)?.extensions['cli']);\n            }\n            result ?? (result = getPackageManager(localWorkspace.extensions['cli']));\n        }\n        if (!result) {\n            result = getPackageManager(globalWorkspace.extensions['cli']);\n        }\n        return result;\n    }\n}\nexports.PackageManagerUtils = PackageManagerUtils;\n__decorate([\n    memoize_1.memoize,\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [String]),\n    __metadata(\"design:returntype\", Object)\n], PackageManagerUtils.prototype, \"getVersion\", null);\n__decorate([\n    memoize_1.memoize,\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", String)\n], PackageManagerUtils.prototype, \"getName\", null);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}