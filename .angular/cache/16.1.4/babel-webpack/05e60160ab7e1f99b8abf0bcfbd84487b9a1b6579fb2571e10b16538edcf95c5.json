{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TargetDefinitionCollection = exports.ProjectDefinitionCollection = void 0;\nclass DefinitionCollection {\n  constructor(initial, _listener) {\n    this._listener = _listener;\n    this._map = new Map(initial && Object.entries(initial));\n  }\n  delete(key) {\n    const result = this._map.delete(key);\n    if (result) {\n      this._listener?.(key, undefined, this);\n    }\n    return result;\n  }\n  set(key, value) {\n    const updatedValue = value !== this.get(key);\n    if (updatedValue) {\n      this._map.set(key, value);\n      this._listener?.(key, value, this);\n    }\n    return this;\n  }\n  forEach(callbackfn, thisArg) {\n    this._map.forEach((value, key) => callbackfn(value, key, this), thisArg);\n  }\n  get(key) {\n    return this._map.get(key);\n  }\n  has(key) {\n    return this._map.has(key);\n  }\n  get size() {\n    return this._map.size;\n  }\n  [Symbol.iterator]() {\n    return this._map[Symbol.iterator]();\n  }\n  entries() {\n    return this._map.entries();\n  }\n  keys() {\n    return this._map.keys();\n  }\n  values() {\n    return this._map.values();\n  }\n}\nfunction isJsonValue(value) {\n  const visited = new Set();\n  switch (typeof value) {\n    case 'boolean':\n    case 'number':\n    case 'string':\n      return true;\n    case 'object':\n      if (value === null) {\n        return true;\n      }\n      visited.add(value);\n      for (const property of Object.values(value)) {\n        if (typeof value === 'object' && visited.has(property)) {\n          continue;\n        }\n        if (!isJsonValue(property)) {\n          return false;\n        }\n      }\n      return true;\n    default:\n      return false;\n  }\n}\nclass ProjectDefinitionCollection extends DefinitionCollection {\n  constructor(initial, listener) {\n    super(initial, listener);\n  }\n  add(definition) {\n    if (this.has(definition.name)) {\n      throw new Error('Project name already exists.');\n    }\n    this._validateName(definition.name);\n    const project = {\n      root: definition.root,\n      prefix: definition.prefix,\n      sourceRoot: definition.sourceRoot,\n      targets: new TargetDefinitionCollection(),\n      extensions: {}\n    };\n    if (definition.targets) {\n      for (const [name, target] of Object.entries(definition.targets)) {\n        if (target) {\n          project.targets.set(name, target);\n        }\n      }\n    }\n    for (const [name, value] of Object.entries(definition)) {\n      switch (name) {\n        case 'name':\n        case 'root':\n        case 'sourceRoot':\n        case 'prefix':\n        case 'targets':\n          break;\n        default:\n          if (isJsonValue(value)) {\n            project.extensions[name] = value;\n          } else {\n            throw new TypeError(`\"${name}\" must be a JSON value.`);\n          }\n          break;\n      }\n    }\n    super.set(definition.name, project);\n    return project;\n  }\n  set(name, value) {\n    this._validateName(name);\n    super.set(name, value);\n    return this;\n  }\n  _validateName(name) {\n    if (typeof name !== 'string' || !/^(?:@\\w[\\w.-]*\\/)?\\w[\\w.-]*$/.test(name)) {\n      throw new Error('Project name must be a valid npm package name.');\n    }\n  }\n}\nexports.ProjectDefinitionCollection = ProjectDefinitionCollection;\nclass TargetDefinitionCollection extends DefinitionCollection {\n  constructor(initial, listener) {\n    super(initial, listener);\n  }\n  add(definition) {\n    if (this.has(definition.name)) {\n      throw new Error('Target name already exists.');\n    }\n    this._validateName(definition.name);\n    const target = {\n      builder: definition.builder,\n      options: definition.options,\n      configurations: definition.configurations,\n      defaultConfiguration: definition.defaultConfiguration\n    };\n    super.set(definition.name, target);\n    return target;\n  }\n  set(name, value) {\n    this._validateName(name);\n    super.set(name, value);\n    return this;\n  }\n  _validateName(name) {\n    if (typeof name !== 'string') {\n      throw new TypeError('Target name must be a string.');\n    }\n  }\n}\nexports.TargetDefinitionCollection = TargetDefinitionCollection;","map":{"version":3,"names":["Object","defineProperty","exports","value","TargetDefinitionCollection","ProjectDefinitionCollection","DefinitionCollection","constructor","initial","_listener","_map","Map","entries","delete","key","result","undefined","set","updatedValue","get","forEach","callbackfn","thisArg","has","size","Symbol","iterator","keys","values","isJsonValue","visited","Set","add","property","listener","definition","name","Error","_validateName","project","root","prefix","sourceRoot","targets","extensions","target","TypeError","test","builder","options","configurations","defaultConfiguration"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@angular-devkit/core/src/workspace/definitions.js"],"sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TargetDefinitionCollection = exports.ProjectDefinitionCollection = void 0;\nclass DefinitionCollection {\n    constructor(initial, _listener) {\n        this._listener = _listener;\n        this._map = new Map(initial && Object.entries(initial));\n    }\n    delete(key) {\n        const result = this._map.delete(key);\n        if (result) {\n            this._listener?.(key, undefined, this);\n        }\n        return result;\n    }\n    set(key, value) {\n        const updatedValue = value !== this.get(key);\n        if (updatedValue) {\n            this._map.set(key, value);\n            this._listener?.(key, value, this);\n        }\n        return this;\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach((value, key) => callbackfn(value, key, this), thisArg);\n    }\n    get(key) {\n        return this._map.get(key);\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get size() {\n        return this._map.size;\n    }\n    [Symbol.iterator]() {\n        return this._map[Symbol.iterator]();\n    }\n    entries() {\n        return this._map.entries();\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\nfunction isJsonValue(value) {\n    const visited = new Set();\n    switch (typeof value) {\n        case 'boolean':\n        case 'number':\n        case 'string':\n            return true;\n        case 'object':\n            if (value === null) {\n                return true;\n            }\n            visited.add(value);\n            for (const property of Object.values(value)) {\n                if (typeof value === 'object' && visited.has(property)) {\n                    continue;\n                }\n                if (!isJsonValue(property)) {\n                    return false;\n                }\n            }\n            return true;\n        default:\n            return false;\n    }\n}\nclass ProjectDefinitionCollection extends DefinitionCollection {\n    constructor(initial, listener) {\n        super(initial, listener);\n    }\n    add(definition) {\n        if (this.has(definition.name)) {\n            throw new Error('Project name already exists.');\n        }\n        this._validateName(definition.name);\n        const project = {\n            root: definition.root,\n            prefix: definition.prefix,\n            sourceRoot: definition.sourceRoot,\n            targets: new TargetDefinitionCollection(),\n            extensions: {},\n        };\n        if (definition.targets) {\n            for (const [name, target] of Object.entries(definition.targets)) {\n                if (target) {\n                    project.targets.set(name, target);\n                }\n            }\n        }\n        for (const [name, value] of Object.entries(definition)) {\n            switch (name) {\n                case 'name':\n                case 'root':\n                case 'sourceRoot':\n                case 'prefix':\n                case 'targets':\n                    break;\n                default:\n                    if (isJsonValue(value)) {\n                        project.extensions[name] = value;\n                    }\n                    else {\n                        throw new TypeError(`\"${name}\" must be a JSON value.`);\n                    }\n                    break;\n            }\n        }\n        super.set(definition.name, project);\n        return project;\n    }\n    set(name, value) {\n        this._validateName(name);\n        super.set(name, value);\n        return this;\n    }\n    _validateName(name) {\n        if (typeof name !== 'string' || !/^(?:@\\w[\\w.-]*\\/)?\\w[\\w.-]*$/.test(name)) {\n            throw new Error('Project name must be a valid npm package name.');\n        }\n    }\n}\nexports.ProjectDefinitionCollection = ProjectDefinitionCollection;\nclass TargetDefinitionCollection extends DefinitionCollection {\n    constructor(initial, listener) {\n        super(initial, listener);\n    }\n    add(definition) {\n        if (this.has(definition.name)) {\n            throw new Error('Target name already exists.');\n        }\n        this._validateName(definition.name);\n        const target = {\n            builder: definition.builder,\n            options: definition.options,\n            configurations: definition.configurations,\n            defaultConfiguration: definition.defaultConfiguration,\n        };\n        super.set(definition.name, target);\n        return target;\n    }\n    set(name, value) {\n        this._validateName(name);\n        super.set(name, value);\n        return this;\n    }\n    _validateName(name) {\n        if (typeof name !== 'string') {\n            throw new TypeError('Target name must be a string.');\n        }\n    }\n}\nexports.TargetDefinitionCollection = TargetDefinitionCollection;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}