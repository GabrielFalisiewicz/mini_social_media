{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Snapshot = void 0;\nconst util_1 = __importDefault(require(\"util\"));\nconst base_1 = require(\"./base\");\nconst file_1 = require(\"./file\");\nconst utils_1 = require(\"./utils\");\n/**\n * A container for the signed part of snapshot metadata.\n *\n * Snapshot contains information about all target Metadata files.\n * A top-level role that specifies the latest versions of all targets metadata files,\n * and hence the latest versions of all targets (including any dependencies between them) on the repository.\n */\nclass Snapshot extends base_1.Signed {\n  constructor(opts) {\n    super(opts);\n    this.type = base_1.MetadataKind.Snapshot;\n    this.meta = opts.meta || {\n      'targets.json': new file_1.MetaFile({\n        version: 1\n      })\n    };\n  }\n  equals(other) {\n    if (!(other instanceof Snapshot)) {\n      return false;\n    }\n    return super.equals(other) && util_1.default.isDeepStrictEqual(this.meta, other.meta);\n  }\n  toJSON() {\n    return {\n      _type: this.type,\n      meta: metaToJSON(this.meta),\n      spec_version: this.specVersion,\n      version: this.version,\n      expires: this.expires,\n      ...this.unrecognizedFields\n    };\n  }\n  static fromJSON(data) {\n    const {\n      unrecognizedFields,\n      ...commonFields\n    } = base_1.Signed.commonFieldsFromJSON(data);\n    const {\n      meta,\n      ...rest\n    } = unrecognizedFields;\n    return new Snapshot({\n      ...commonFields,\n      meta: metaFromJSON(meta),\n      unrecognizedFields: rest\n    });\n  }\n}\nexports.Snapshot = Snapshot;\nfunction metaToJSON(meta) {\n  return Object.entries(meta).reduce((acc, [path, metadata]) => ({\n    ...acc,\n    [path]: metadata.toJSON()\n  }), {});\n}\nfunction metaFromJSON(data) {\n  let meta;\n  if (utils_1.guard.isDefined(data)) {\n    if (!utils_1.guard.isObjectRecord(data)) {\n      throw new TypeError('meta field is malformed');\n    } else {\n      meta = Object.entries(data).reduce((acc, [path, metadata]) => ({\n        ...acc,\n        [path]: file_1.MetaFile.fromJSON(metadata)\n      }), {});\n    }\n  }\n  return meta;\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Snapshot","util_1","require","base_1","file_1","utils_1","Signed","constructor","opts","type","MetadataKind","meta","MetaFile","version","equals","other","default","isDeepStrictEqual","toJSON","_type","metaToJSON","spec_version","specVersion","expires","unrecognizedFields","fromJSON","data","commonFields","commonFieldsFromJSON","rest","metaFromJSON","entries","reduce","acc","path","metadata","guard","isDefined","isObjectRecord","TypeError"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@tufjs/models/dist/snapshot.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Snapshot = void 0;\nconst util_1 = __importDefault(require(\"util\"));\nconst base_1 = require(\"./base\");\nconst file_1 = require(\"./file\");\nconst utils_1 = require(\"./utils\");\n/**\n * A container for the signed part of snapshot metadata.\n *\n * Snapshot contains information about all target Metadata files.\n * A top-level role that specifies the latest versions of all targets metadata files,\n * and hence the latest versions of all targets (including any dependencies between them) on the repository.\n */\nclass Snapshot extends base_1.Signed {\n    constructor(opts) {\n        super(opts);\n        this.type = base_1.MetadataKind.Snapshot;\n        this.meta = opts.meta || { 'targets.json': new file_1.MetaFile({ version: 1 }) };\n    }\n    equals(other) {\n        if (!(other instanceof Snapshot)) {\n            return false;\n        }\n        return super.equals(other) && util_1.default.isDeepStrictEqual(this.meta, other.meta);\n    }\n    toJSON() {\n        return {\n            _type: this.type,\n            meta: metaToJSON(this.meta),\n            spec_version: this.specVersion,\n            version: this.version,\n            expires: this.expires,\n            ...this.unrecognizedFields,\n        };\n    }\n    static fromJSON(data) {\n        const { unrecognizedFields, ...commonFields } = base_1.Signed.commonFieldsFromJSON(data);\n        const { meta, ...rest } = unrecognizedFields;\n        return new Snapshot({\n            ...commonFields,\n            meta: metaFromJSON(meta),\n            unrecognizedFields: rest,\n        });\n    }\n}\nexports.Snapshot = Snapshot;\nfunction metaToJSON(meta) {\n    return Object.entries(meta).reduce((acc, [path, metadata]) => ({\n        ...acc,\n        [path]: metadata.toJSON(),\n    }), {});\n}\nfunction metaFromJSON(data) {\n    let meta;\n    if (utils_1.guard.isDefined(data)) {\n        if (!utils_1.guard.isObjectRecord(data)) {\n            throw new TypeError('meta field is malformed');\n        }\n        else {\n            meta = Object.entries(data).reduce((acc, [path, metadata]) => ({\n                ...acc,\n                [path]: file_1.MetaFile.fromJSON(metadata),\n            }), {});\n        }\n    }\n    return meta;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}