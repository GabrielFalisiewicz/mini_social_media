{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.canonicalize = void 0;\n/*\nCopyright 2023 The Sigstore Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n// JSON canonicalization per https://github.com/cyberphone/json-canonicalization\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction canonicalize(object) {\n  let buffer = '';\n  if (object === null || typeof object !== 'object' || object.toJSON != null) {\n    // Primitives or toJSONable objects\n    buffer += JSON.stringify(object);\n  } else if (Array.isArray(object)) {\n    // Array - maintain element order\n    buffer += '[';\n    let first = true;\n    object.forEach(element => {\n      if (!first) {\n        buffer += ',';\n      }\n      first = false;\n      // recursive call\n      buffer += canonicalize(element);\n    });\n    buffer += ']';\n  } else {\n    // Object - Sort properties before serializing\n    buffer += '{';\n    let first = true;\n    Object.keys(object).sort().forEach(property => {\n      if (!first) {\n        buffer += ',';\n      }\n      first = false;\n      buffer += JSON.stringify(property);\n      buffer += ':';\n      // recursive call\n      buffer += canonicalize(object[property]);\n    });\n    buffer += '}';\n  }\n  return buffer;\n}\nexports.canonicalize = canonicalize;","map":{"version":3,"names":["Object","defineProperty","exports","value","canonicalize","object","buffer","toJSON","JSON","stringify","Array","isArray","first","forEach","element","keys","sort","property"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/sigstore/dist/util/json.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.canonicalize = void 0;\n/*\nCopyright 2023 The Sigstore Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n// JSON canonicalization per https://github.com/cyberphone/json-canonicalization\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction canonicalize(object) {\n    let buffer = '';\n    if (object === null || typeof object !== 'object' || object.toJSON != null) {\n        // Primitives or toJSONable objects\n        buffer += JSON.stringify(object);\n    }\n    else if (Array.isArray(object)) {\n        // Array - maintain element order\n        buffer += '[';\n        let first = true;\n        object.forEach((element) => {\n            if (!first) {\n                buffer += ',';\n            }\n            first = false;\n            // recursive call\n            buffer += canonicalize(element);\n        });\n        buffer += ']';\n    }\n    else {\n        // Object - Sort properties before serializing\n        buffer += '{';\n        let first = true;\n        Object.keys(object)\n            .sort()\n            .forEach((property) => {\n            if (!first) {\n                buffer += ',';\n            }\n            first = false;\n            buffer += JSON.stringify(property);\n            buffer += ':';\n            // recursive call\n            buffer += canonicalize(object[property]);\n        });\n        buffer += '}';\n    }\n    return buffer;\n}\nexports.canonicalize = canonicalize;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAYA,CAACC,MAAM,EAAE;EAC1B,IAAIC,MAAM,GAAG,EAAE;EACf,IAAID,MAAM,KAAK,IAAI,IAAI,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACE,MAAM,IAAI,IAAI,EAAE;IACxE;IACAD,MAAM,IAAIE,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC;EACpC,CAAC,MACI,IAAIK,KAAK,CAACC,OAAO,CAACN,MAAM,CAAC,EAAE;IAC5B;IACAC,MAAM,IAAI,GAAG;IACb,IAAIM,KAAK,GAAG,IAAI;IAChBP,MAAM,CAACQ,OAAO,CAAEC,OAAO,IAAK;MACxB,IAAI,CAACF,KAAK,EAAE;QACRN,MAAM,IAAI,GAAG;MACjB;MACAM,KAAK,GAAG,KAAK;MACb;MACAN,MAAM,IAAIF,YAAY,CAACU,OAAO,CAAC;IACnC,CAAC,CAAC;IACFR,MAAM,IAAI,GAAG;EACjB,CAAC,MACI;IACD;IACAA,MAAM,IAAI,GAAG;IACb,IAAIM,KAAK,GAAG,IAAI;IAChBZ,MAAM,CAACe,IAAI,CAACV,MAAM,CAAC,CACdW,IAAI,CAAC,CAAC,CACNH,OAAO,CAAEI,QAAQ,IAAK;MACvB,IAAI,CAACL,KAAK,EAAE;QACRN,MAAM,IAAI,GAAG;MACjB;MACAM,KAAK,GAAG,KAAK;MACbN,MAAM,IAAIE,IAAI,CAACC,SAAS,CAACQ,QAAQ,CAAC;MAClCX,MAAM,IAAI,GAAG;MACb;MACAA,MAAM,IAAIF,YAAY,CAACC,MAAM,CAACY,QAAQ,CAAC,CAAC;IAC5C,CAAC,CAAC;IACFX,MAAM,IAAI,GAAG;EACjB;EACA,OAAOA,MAAM;AACjB;AACAJ,OAAO,CAACE,YAAY,GAAGA,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}