{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst Fetcher = require('./fetcher.js');\nconst FileFetcher = require('./file.js');\nconst {\n  Minipass\n} = require('minipass');\nconst tarCreateOptions = require('./util/tar-create-options.js');\nconst packlist = require('npm-packlist');\nconst tar = require('tar');\nconst _prepareDir = Symbol('_prepareDir');\nconst {\n  resolve\n} = require('path');\nconst _readPackageJson = Symbol.for('package.Fetcher._readPackageJson');\nconst runScript = require('@npmcli/run-script');\nconst _tarballFromResolved = Symbol.for('pacote.Fetcher._tarballFromResolved');\nclass DirFetcher extends Fetcher {\n  constructor(spec, opts) {\n    super(spec, opts);\n    // just the fully resolved filename\n    this.resolved = this.spec.fetchSpec;\n    this.tree = opts.tree || null;\n    this.Arborist = opts.Arborist || null;\n  }\n\n  // exposes tarCreateOptions as public API\n  static tarCreateOptions(manifest) {\n    return tarCreateOptions(manifest);\n  }\n  get types() {\n    return ['directory'];\n  }\n  [_prepareDir]() {\n    return this.manifest().then(mani => {\n      if (!mani.scripts || !mani.scripts.prepare) {\n        return;\n      }\n\n      // we *only* run prepare.\n      // pre/post-pack is run by the npm CLI for publish and pack,\n      // but this function is *also* run when installing git deps\n      const stdio = this.opts.foregroundScripts ? 'inherit' : 'pipe';\n\n      // hide the banner if silent opt is passed in, or if prepare running\n      // in the background.\n      const banner = this.opts.silent ? false : stdio === 'inherit';\n      return runScript({\n        pkg: mani,\n        event: 'prepare',\n        path: this.resolved,\n        stdio,\n        banner,\n        env: {\n          npm_package_resolved: this.resolved,\n          npm_package_integrity: this.integrity,\n          npm_package_json: resolve(this.resolved, 'package.json')\n        }\n      });\n    });\n  }\n  [_tarballFromResolved]() {\n    var _this = this;\n    if (!this.tree && !this.Arborist) {\n      throw new Error('DirFetcher requires either a tree or an Arborist constructor to pack');\n    }\n    const stream = new Minipass();\n    stream.resolved = this.resolved;\n    stream.integrity = this.integrity;\n    const {\n      prefix,\n      workspaces\n    } = this.opts;\n\n    // run the prepare script, get the list of files, and tar it up\n    // pipe to the stream, and proxy errors the chain.\n    this[_prepareDir]().then( /*#__PURE__*/_asyncToGenerator(function* () {\n      if (!_this.tree) {\n        const arb = new _this.Arborist({\n          path: _this.resolved\n        });\n        _this.tree = yield arb.loadActual();\n      }\n      return packlist(_this.tree, {\n        path: _this.resolved,\n        prefix,\n        workspaces\n      });\n    })).then(files => tar.c(tarCreateOptions(this.package), files).on('error', er => stream.emit('error', er)).pipe(stream)).catch(er => stream.emit('error', er));\n    return stream;\n  }\n  manifest() {\n    if (this.package) {\n      return Promise.resolve(this.package);\n    }\n    return this[_readPackageJson](this.resolved + '/package.json').then(mani => this.package = {\n      ...mani,\n      _integrity: this.integrity && String(this.integrity),\n      _resolved: this.resolved,\n      _from: this.from\n    });\n  }\n  packument() {\n    return FileFetcher.prototype.packument.apply(this);\n  }\n}\nmodule.exports = DirFetcher;","map":{"version":3,"names":["Fetcher","require","FileFetcher","Minipass","tarCreateOptions","packlist","tar","_prepareDir","Symbol","resolve","_readPackageJson","for","runScript","_tarballFromResolved","DirFetcher","constructor","spec","opts","resolved","fetchSpec","tree","Arborist","manifest","types","then","mani","scripts","prepare","stdio","foregroundScripts","banner","silent","pkg","event","path","env","npm_package_resolved","npm_package_integrity","integrity","npm_package_json","_this","Error","stream","prefix","workspaces","_asyncToGenerator","arb","loadActual","files","c","package","on","er","emit","pipe","catch","Promise","_integrity","String","_resolved","_from","from","packument","prototype","apply","module","exports"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/pacote/lib/dir.js"],"sourcesContent":["const Fetcher = require('./fetcher.js')\nconst FileFetcher = require('./file.js')\nconst { Minipass } = require('minipass')\nconst tarCreateOptions = require('./util/tar-create-options.js')\nconst packlist = require('npm-packlist')\nconst tar = require('tar')\nconst _prepareDir = Symbol('_prepareDir')\nconst { resolve } = require('path')\nconst _readPackageJson = Symbol.for('package.Fetcher._readPackageJson')\n\nconst runScript = require('@npmcli/run-script')\n\nconst _tarballFromResolved = Symbol.for('pacote.Fetcher._tarballFromResolved')\nclass DirFetcher extends Fetcher {\n  constructor (spec, opts) {\n    super(spec, opts)\n    // just the fully resolved filename\n    this.resolved = this.spec.fetchSpec\n\n    this.tree = opts.tree || null\n    this.Arborist = opts.Arborist || null\n  }\n\n  // exposes tarCreateOptions as public API\n  static tarCreateOptions (manifest) {\n    return tarCreateOptions(manifest)\n  }\n\n  get types () {\n    return ['directory']\n  }\n\n  [_prepareDir] () {\n    return this.manifest().then(mani => {\n      if (!mani.scripts || !mani.scripts.prepare) {\n        return\n      }\n\n      // we *only* run prepare.\n      // pre/post-pack is run by the npm CLI for publish and pack,\n      // but this function is *also* run when installing git deps\n      const stdio = this.opts.foregroundScripts ? 'inherit' : 'pipe'\n\n      // hide the banner if silent opt is passed in, or if prepare running\n      // in the background.\n      const banner = this.opts.silent ? false : stdio === 'inherit'\n\n      return runScript({\n        pkg: mani,\n        event: 'prepare',\n        path: this.resolved,\n        stdio,\n        banner,\n        env: {\n          npm_package_resolved: this.resolved,\n          npm_package_integrity: this.integrity,\n          npm_package_json: resolve(this.resolved, 'package.json'),\n        },\n      })\n    })\n  }\n\n  [_tarballFromResolved] () {\n    if (!this.tree && !this.Arborist) {\n      throw new Error('DirFetcher requires either a tree or an Arborist constructor to pack')\n    }\n\n    const stream = new Minipass()\n    stream.resolved = this.resolved\n    stream.integrity = this.integrity\n\n    const { prefix, workspaces } = this.opts\n\n    // run the prepare script, get the list of files, and tar it up\n    // pipe to the stream, and proxy errors the chain.\n    this[_prepareDir]()\n      .then(async () => {\n        if (!this.tree) {\n          const arb = new this.Arborist({ path: this.resolved })\n          this.tree = await arb.loadActual()\n        }\n        return packlist(this.tree, { path: this.resolved, prefix, workspaces })\n      })\n      .then(files => tar.c(tarCreateOptions(this.package), files)\n        .on('error', er => stream.emit('error', er)).pipe(stream))\n      .catch(er => stream.emit('error', er))\n    return stream\n  }\n\n  manifest () {\n    if (this.package) {\n      return Promise.resolve(this.package)\n    }\n\n    return this[_readPackageJson](this.resolved + '/package.json')\n      .then(mani => this.package = {\n        ...mani,\n        _integrity: this.integrity && String(this.integrity),\n        _resolved: this.resolved,\n        _from: this.from,\n      })\n  }\n\n  packument () {\n    return FileFetcher.prototype.packument.apply(this)\n  }\n}\nmodule.exports = DirFetcher\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}