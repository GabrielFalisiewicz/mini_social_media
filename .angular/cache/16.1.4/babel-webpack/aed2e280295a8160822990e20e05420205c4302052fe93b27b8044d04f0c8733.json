{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Signer = void 0;\nconst sigstore = __importStar(require(\"./types/sigstore\"));\nconst util_1 = require(\"./util\");\nclass Signer {\n  constructor(options) {\n    this.identityProviders = [];\n    this.ca = options.ca;\n    this.tlog = options.tlog;\n    this.tsa = options.tsa;\n    this.identityProviders = options.identityProviders;\n    this.tlogUpload = options.tlogUpload ?? true;\n    this.signer = options.signer || this.signWithEphemeralKey.bind(this);\n  }\n  signBlob(payload) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Get signature and verification material for payload\n      const sigMaterial = yield _this.signer(payload);\n      // Calculate artifact digest\n      const digest = util_1.crypto.hash(payload);\n      // Create a Rekor entry (if tlogUpload is enabled)\n      const entry = _this.tlogUpload ? yield _this.tlog.createMessageSignatureEntry(digest, sigMaterial) : undefined;\n      return sigstore.toMessageSignatureBundle({\n        digest,\n        signature: sigMaterial,\n        tlogEntry: entry,\n        timestamp: _this.tsa ? yield _this.tsa.createTimestamp(sigMaterial.signature) : undefined\n      });\n    })();\n  }\n  signAttestation(payload, payloadType) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // Pre-authentication encoding to be signed\n      const paeBuffer = util_1.dsse.preAuthEncoding(payloadType, payload);\n      // Get signature and verification material for pae\n      const sigMaterial = yield _this2.signer(paeBuffer);\n      const envelope = {\n        payloadType,\n        payload: payload,\n        signatures: [{\n          keyid: sigMaterial.key?.id || '',\n          sig: sigMaterial.signature\n        }]\n      };\n      // Create a Rekor entry (if tlogUpload is enabled)\n      const entry = _this2.tlogUpload ? yield _this2.tlog.createDSSEEntry(envelope, sigMaterial) : undefined;\n      return sigstore.toDSSEBundle({\n        envelope,\n        signature: sigMaterial,\n        tlogEntry: entry,\n        timestamp: _this2.tsa ? yield _this2.tsa.createTimestamp(sigMaterial.signature) : undefined\n      });\n    })();\n  }\n  signWithEphemeralKey(payload) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      // Create emphemeral key pair\n      const keypair = util_1.crypto.generateKeyPair();\n      // Retrieve identity token from one of the supplied identity providers\n      const identityToken = yield _this3.getIdentityToken();\n      // Extract challenge claim from OIDC token\n      const subject = util_1.oidc.extractJWTSubject(identityToken);\n      // Construct challenge value by encrypting subject with private key\n      const challenge = util_1.crypto.signBlob(Buffer.from(subject), keypair.privateKey);\n      // Create signing certificate\n      const certificates = yield _this3.ca.createSigningCertificate(identityToken, keypair.publicKey, challenge);\n      // Generate artifact signature\n      const signature = util_1.crypto.signBlob(payload, keypair.privateKey);\n      return {\n        signature,\n        certificates,\n        key: undefined\n      };\n    })();\n  }\n  getIdentityToken() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const aggErrs = [];\n      for (const provider of _this4.identityProviders) {\n        try {\n          const token = yield provider.getToken();\n          if (token) {\n            return token;\n          }\n        } catch (err) {\n          aggErrs.push(err);\n        }\n      }\n      throw new Error(`Identity token providers failed: ${aggErrs}`);\n    })();\n  }\n}\nexports.Signer = Signer;","map":{"version":3,"names":["_asyncToGenerator","require","default","__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","Signer","sigstore","util_1","constructor","options","identityProviders","ca","tlog","tsa","tlogUpload","signer","signWithEphemeralKey","bind","signBlob","payload","_this","sigMaterial","digest","crypto","hash","entry","createMessageSignatureEntry","toMessageSignatureBundle","signature","tlogEntry","timestamp","createTimestamp","signAttestation","payloadType","_this2","paeBuffer","dsse","preAuthEncoding","envelope","signatures","keyid","key","id","sig","createDSSEEntry","toDSSEBundle","_this3","keypair","generateKeyPair","identityToken","getIdentityToken","subject","oidc","extractJWTSubject","challenge","Buffer","from","privateKey","certificates","createSigningCertificate","publicKey","_this4","aggErrs","provider","token","getToken","err","push","Error"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/sigstore/dist/sign.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signer = void 0;\nconst sigstore = __importStar(require(\"./types/sigstore\"));\nconst util_1 = require(\"./util\");\nclass Signer {\n    constructor(options) {\n        this.identityProviders = [];\n        this.ca = options.ca;\n        this.tlog = options.tlog;\n        this.tsa = options.tsa;\n        this.identityProviders = options.identityProviders;\n        this.tlogUpload = options.tlogUpload ?? true;\n        this.signer = options.signer || this.signWithEphemeralKey.bind(this);\n    }\n    async signBlob(payload) {\n        // Get signature and verification material for payload\n        const sigMaterial = await this.signer(payload);\n        // Calculate artifact digest\n        const digest = util_1.crypto.hash(payload);\n        // Create a Rekor entry (if tlogUpload is enabled)\n        const entry = this.tlogUpload\n            ? await this.tlog.createMessageSignatureEntry(digest, sigMaterial)\n            : undefined;\n        return sigstore.toMessageSignatureBundle({\n            digest,\n            signature: sigMaterial,\n            tlogEntry: entry,\n            timestamp: this.tsa\n                ? await this.tsa.createTimestamp(sigMaterial.signature)\n                : undefined,\n        });\n    }\n    async signAttestation(payload, payloadType) {\n        // Pre-authentication encoding to be signed\n        const paeBuffer = util_1.dsse.preAuthEncoding(payloadType, payload);\n        // Get signature and verification material for pae\n        const sigMaterial = await this.signer(paeBuffer);\n        const envelope = {\n            payloadType,\n            payload: payload,\n            signatures: [\n                {\n                    keyid: sigMaterial.key?.id || '',\n                    sig: sigMaterial.signature,\n                },\n            ],\n        };\n        // Create a Rekor entry (if tlogUpload is enabled)\n        const entry = this.tlogUpload\n            ? await this.tlog.createDSSEEntry(envelope, sigMaterial)\n            : undefined;\n        return sigstore.toDSSEBundle({\n            envelope,\n            signature: sigMaterial,\n            tlogEntry: entry,\n            timestamp: this.tsa\n                ? await this.tsa.createTimestamp(sigMaterial.signature)\n                : undefined,\n        });\n    }\n    async signWithEphemeralKey(payload) {\n        // Create emphemeral key pair\n        const keypair = util_1.crypto.generateKeyPair();\n        // Retrieve identity token from one of the supplied identity providers\n        const identityToken = await this.getIdentityToken();\n        // Extract challenge claim from OIDC token\n        const subject = util_1.oidc.extractJWTSubject(identityToken);\n        // Construct challenge value by encrypting subject with private key\n        const challenge = util_1.crypto.signBlob(Buffer.from(subject), keypair.privateKey);\n        // Create signing certificate\n        const certificates = await this.ca.createSigningCertificate(identityToken, keypair.publicKey, challenge);\n        // Generate artifact signature\n        const signature = util_1.crypto.signBlob(payload, keypair.privateKey);\n        return {\n            signature,\n            certificates,\n            key: undefined,\n        };\n    }\n    async getIdentityToken() {\n        const aggErrs = [];\n        for (const provider of this.identityProviders) {\n            try {\n                const token = await provider.getToken();\n                if (token) {\n                    return token;\n                }\n            }\n            catch (err) {\n                aggErrs.push(err);\n            }\n        }\n        throw new Error(`Identity token providers failed: ${aggErrs}`);\n    }\n}\nexports.Signer = Signer;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}