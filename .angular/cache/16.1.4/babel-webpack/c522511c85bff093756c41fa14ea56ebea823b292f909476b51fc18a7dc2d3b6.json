{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CAClient = void 0;\nconst error_1 = require(\"../error\");\nconst external_1 = require(\"../external\");\nconst format_1 = require(\"./format\");\nclass CAClient {\n  constructor(options) {\n    this.fulcio = new external_1.Fulcio({\n      baseURL: options.fulcioBaseURL,\n      retry: options.retry,\n      timeout: options.timeout\n    });\n  }\n  createSigningCertificate(identityToken, publicKey, challenge) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const request = (0, format_1.toCertificateRequest)(identityToken, publicKey, challenge);\n      try {\n        const resp = yield _this.fulcio.createSigningCertificate(request);\n        // Account for the fact that the response may contain either a\n        // signedCertificateEmbeddedSct or a signedCertificateDetachedSct.\n        const cert = resp.signedCertificateEmbeddedSct ? resp.signedCertificateEmbeddedSct : resp.signedCertificateDetachedSct;\n        // Return the first certificate in the chain, which is the signing\n        // certificate. Specifically not returning the rest of the chain to\n        // mitigate the risk of errors when verifying the certificate chain.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return cert.chain.certificates.slice(0, 1);\n      } catch (err) {\n        throw new error_1.InternalError({\n          code: 'CA_CREATE_SIGNING_CERTIFICATE_ERROR',\n          message: 'error creating signing certificate',\n          cause: err\n        });\n      }\n    })();\n  }\n}\nexports.CAClient = CAClient;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","CAClient","error_1","external_1","format_1","constructor","options","fulcio","Fulcio","baseURL","fulcioBaseURL","retry","timeout","createSigningCertificate","identityToken","publicKey","challenge","_this","request","toCertificateRequest","resp","cert","signedCertificateEmbeddedSct","signedCertificateDetachedSct","chain","certificates","slice","err","InternalError","code","message","cause"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/sigstore/dist/ca/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CAClient = void 0;\nconst error_1 = require(\"../error\");\nconst external_1 = require(\"../external\");\nconst format_1 = require(\"./format\");\nclass CAClient {\n    constructor(options) {\n        this.fulcio = new external_1.Fulcio({\n            baseURL: options.fulcioBaseURL,\n            retry: options.retry,\n            timeout: options.timeout,\n        });\n    }\n    async createSigningCertificate(identityToken, publicKey, challenge) {\n        const request = (0, format_1.toCertificateRequest)(identityToken, publicKey, challenge);\n        try {\n            const resp = await this.fulcio.createSigningCertificate(request);\n            // Account for the fact that the response may contain either a\n            // signedCertificateEmbeddedSct or a signedCertificateDetachedSct.\n            const cert = resp.signedCertificateEmbeddedSct\n                ? resp.signedCertificateEmbeddedSct\n                : resp.signedCertificateDetachedSct;\n            // Return the first certificate in the chain, which is the signing\n            // certificate. Specifically not returning the rest of the chain to\n            // mitigate the risk of errors when verifying the certificate chain.\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return cert.chain.certificates.slice(0, 1);\n        }\n        catch (err) {\n            throw new error_1.InternalError({\n                code: 'CA_CREATE_SIGNING_CERTIFICATE_ERROR',\n                message: 'error creating signing certificate',\n                cause: err,\n            });\n        }\n    }\n}\nexports.CAClient = CAClient;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA,gIAAAC,OAAA;AACbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,QAAQ,GAAG,KAAK,CAAC;AACzB,MAAMC,OAAO,GAAGP,OAAO,CAAC,UAAU,CAAC;AACnC,MAAMQ,UAAU,GAAGR,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMS,QAAQ,GAAGT,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMM,QAAQ,CAAC;EACXI,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACC,MAAM,GAAG,IAAIJ,UAAU,CAACK,MAAM,CAAC;MAChCC,OAAO,EAAEH,OAAO,CAACI,aAAa;MAC9BC,KAAK,EAAEL,OAAO,CAACK,KAAK;MACpBC,OAAO,EAAEN,OAAO,CAACM;IACrB,CAAC,CAAC;EACN;EACMC,wBAAwBA,CAACC,aAAa,EAAEC,SAAS,EAAEC,SAAS,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAvB,iBAAA;MAChE,MAAMwB,OAAO,GAAG,CAAC,CAAC,EAAEd,QAAQ,CAACe,oBAAoB,EAAEL,aAAa,EAAEC,SAAS,EAAEC,SAAS,CAAC;MACvF,IAAI;QACA,MAAMI,IAAI,SAASH,KAAI,CAACV,MAAM,CAACM,wBAAwB,CAACK,OAAO,CAAC;QAChE;QACA;QACA,MAAMG,IAAI,GAAGD,IAAI,CAACE,4BAA4B,GACxCF,IAAI,CAACE,4BAA4B,GACjCF,IAAI,CAACG,4BAA4B;QACvC;QACA;QACA;QACA;QACA,OAAOF,IAAI,CAACG,KAAK,CAACC,YAAY,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MAC9C,CAAC,CACD,OAAOC,GAAG,EAAE;QACR,MAAM,IAAIzB,OAAO,CAAC0B,aAAa,CAAC;UAC5BC,IAAI,EAAE,qCAAqC;UAC3CC,OAAO,EAAE,oCAAoC;UAC7CC,KAAK,EAAEJ;QACX,CAAC,CAAC;MACN;IAAC;EACL;AACJ;AACA5B,OAAO,CAACE,QAAQ,GAAGA,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}