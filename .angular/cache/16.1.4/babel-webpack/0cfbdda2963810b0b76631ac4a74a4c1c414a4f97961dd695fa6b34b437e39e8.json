{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.identityProviders = exports.artifactVerificationOptions = exports.createTSAClient = exports.createTLogClient = exports.createCAClient = exports.DEFAULT_TIMEOUT = exports.DEFAULT_RETRY = exports.DEFAULT_REKOR_URL = exports.DEFAULT_FULCIO_URL = void 0;\n/*\nCopyright 2023 The Sigstore Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nconst ca_1 = require(\"./ca\");\nconst identity_1 = __importDefault(require(\"./identity\"));\nconst tlog_1 = require(\"./tlog\");\nconst tsa_1 = require(\"./tsa\");\nconst sigstore = __importStar(require(\"./types/sigstore\"));\nexports.DEFAULT_FULCIO_URL = 'https://fulcio.sigstore.dev';\nexports.DEFAULT_REKOR_URL = 'https://rekor.sigstore.dev';\nexports.DEFAULT_RETRY = {\n  retries: 2\n};\nexports.DEFAULT_TIMEOUT = 5000;\nfunction createCAClient(options) {\n  return new ca_1.CAClient({\n    fulcioBaseURL: options.fulcioURL || exports.DEFAULT_FULCIO_URL,\n    retry: options.retry ?? exports.DEFAULT_RETRY,\n    timeout: options.timeout ?? exports.DEFAULT_TIMEOUT\n  });\n}\nexports.createCAClient = createCAClient;\nfunction createTLogClient(options) {\n  return new tlog_1.TLogClient({\n    rekorBaseURL: options.rekorURL || exports.DEFAULT_REKOR_URL,\n    retry: options.retry ?? exports.DEFAULT_RETRY,\n    timeout: options.timeout ?? exports.DEFAULT_TIMEOUT\n  });\n}\nexports.createTLogClient = createTLogClient;\nfunction createTSAClient(options) {\n  return options.tsaServerURL ? new tsa_1.TSAClient({\n    tsaBaseURL: options.tsaServerURL,\n    retry: options.retry ?? exports.DEFAULT_RETRY,\n    timeout: options.timeout ?? exports.DEFAULT_TIMEOUT\n  }) : undefined;\n}\nexports.createTSAClient = createTSAClient;\n// Assembles the AtifactVerificationOptions from the supplied VerifyOptions.\nfunction artifactVerificationOptions(options) {\n  // The trusted signers are only used if the options contain a certificate\n  // issuer\n  let signers;\n  if (options.certificateIssuer) {\n    let san = undefined;\n    if (options.certificateIdentityEmail) {\n      san = {\n        type: sigstore.SubjectAlternativeNameType.EMAIL,\n        identity: {\n          $case: 'value',\n          value: options.certificateIdentityEmail\n        }\n      };\n    } else if (options.certificateIdentityURI) {\n      san = {\n        type: sigstore.SubjectAlternativeNameType.URI,\n        identity: {\n          $case: 'value',\n          value: options.certificateIdentityURI\n        }\n      };\n    }\n    const oids = Object.entries(options.certificateOIDs || {}).map(([oid, value]) => ({\n      oid: {\n        id: oid.split('.').map(s => parseInt(s, 10))\n      },\n      value: Buffer.from(value)\n    }));\n    signers = {\n      $case: 'certificateIdentities',\n      certificateIdentities: {\n        identities: [{\n          issuer: options.certificateIssuer,\n          san: san,\n          oids: oids\n        }]\n      }\n    };\n  }\n  // Construct the artifact verification options w/ defaults\n  return {\n    ctlogOptions: {\n      disable: false,\n      threshold: options.ctLogThreshold || 1,\n      detachedSct: false\n    },\n    tlogOptions: {\n      disable: false,\n      threshold: options.tlogThreshold || 1,\n      performOnlineVerification: false\n    },\n    signers\n  };\n}\nexports.artifactVerificationOptions = artifactVerificationOptions;\n// Translates the IdenityProviderOptions into a list of Providers which\n// should be queried to retrieve an identity token.\nfunction identityProviders(options) {\n  const idps = [];\n  const token = options.identityToken;\n  // If an explicit identity token is provided, use that. Setup a dummy\n  // provider that just returns the token. Otherwise, setup the CI context\n  // provider and (optionally) the OAuth provider.\n  if (token) {\n    idps.push({\n      getToken: () => Promise.resolve(token)\n    });\n  } else {\n    idps.push(identity_1.default.ciContextProvider());\n    if (options.oidcIssuer && options.oidcClientID) {\n      idps.push(identity_1.default.oauthProvider({\n        issuer: options.oidcIssuer,\n        clientID: options.oidcClientID,\n        clientSecret: options.oidcClientSecret,\n        redirectURL: options.oidcRedirectURL\n      }));\n    }\n  }\n  return idps;\n}\nexports.identityProviders = identityProviders;","map":{"version":3,"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","identityProviders","artifactVerificationOptions","createTSAClient","createTLogClient","createCAClient","DEFAULT_TIMEOUT","DEFAULT_RETRY","DEFAULT_REKOR_URL","DEFAULT_FULCIO_URL","ca_1","require","identity_1","tlog_1","tsa_1","sigstore","retries","options","CAClient","fulcioBaseURL","fulcioURL","retry","timeout","TLogClient","rekorBaseURL","rekorURL","tsaServerURL","TSAClient","tsaBaseURL","signers","certificateIssuer","san","certificateIdentityEmail","type","SubjectAlternativeNameType","EMAIL","identity","$case","certificateIdentityURI","URI","oids","entries","certificateOIDs","map","oid","id","split","s","parseInt","Buffer","from","certificateIdentities","identities","issuer","ctlogOptions","disable","threshold","ctLogThreshold","detachedSct","tlogOptions","tlogThreshold","performOnlineVerification","idps","token","identityToken","push","getToken","Promise","resolve","default","ciContextProvider","oidcIssuer","oidcClientID","oauthProvider","clientID","clientSecret","oidcClientSecret","redirectURL","oidcRedirectURL"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/sigstore/dist/config.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.identityProviders = exports.artifactVerificationOptions = exports.createTSAClient = exports.createTLogClient = exports.createCAClient = exports.DEFAULT_TIMEOUT = exports.DEFAULT_RETRY = exports.DEFAULT_REKOR_URL = exports.DEFAULT_FULCIO_URL = void 0;\n/*\nCopyright 2023 The Sigstore Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\nconst ca_1 = require(\"./ca\");\nconst identity_1 = __importDefault(require(\"./identity\"));\nconst tlog_1 = require(\"./tlog\");\nconst tsa_1 = require(\"./tsa\");\nconst sigstore = __importStar(require(\"./types/sigstore\"));\nexports.DEFAULT_FULCIO_URL = 'https://fulcio.sigstore.dev';\nexports.DEFAULT_REKOR_URL = 'https://rekor.sigstore.dev';\nexports.DEFAULT_RETRY = { retries: 2 };\nexports.DEFAULT_TIMEOUT = 5000;\nfunction createCAClient(options) {\n    return new ca_1.CAClient({\n        fulcioBaseURL: options.fulcioURL || exports.DEFAULT_FULCIO_URL,\n        retry: options.retry ?? exports.DEFAULT_RETRY,\n        timeout: options.timeout ?? exports.DEFAULT_TIMEOUT,\n    });\n}\nexports.createCAClient = createCAClient;\nfunction createTLogClient(options) {\n    return new tlog_1.TLogClient({\n        rekorBaseURL: options.rekorURL || exports.DEFAULT_REKOR_URL,\n        retry: options.retry ?? exports.DEFAULT_RETRY,\n        timeout: options.timeout ?? exports.DEFAULT_TIMEOUT,\n    });\n}\nexports.createTLogClient = createTLogClient;\nfunction createTSAClient(options) {\n    return options.tsaServerURL\n        ? new tsa_1.TSAClient({\n            tsaBaseURL: options.tsaServerURL,\n            retry: options.retry ?? exports.DEFAULT_RETRY,\n            timeout: options.timeout ?? exports.DEFAULT_TIMEOUT,\n        })\n        : undefined;\n}\nexports.createTSAClient = createTSAClient;\n// Assembles the AtifactVerificationOptions from the supplied VerifyOptions.\nfunction artifactVerificationOptions(options) {\n    // The trusted signers are only used if the options contain a certificate\n    // issuer\n    let signers;\n    if (options.certificateIssuer) {\n        let san = undefined;\n        if (options.certificateIdentityEmail) {\n            san = {\n                type: sigstore.SubjectAlternativeNameType.EMAIL,\n                identity: {\n                    $case: 'value',\n                    value: options.certificateIdentityEmail,\n                },\n            };\n        }\n        else if (options.certificateIdentityURI) {\n            san = {\n                type: sigstore.SubjectAlternativeNameType.URI,\n                identity: {\n                    $case: 'value',\n                    value: options.certificateIdentityURI,\n                },\n            };\n        }\n        const oids = Object.entries(options.certificateOIDs || {}).map(([oid, value]) => ({\n            oid: { id: oid.split('.').map((s) => parseInt(s, 10)) },\n            value: Buffer.from(value),\n        }));\n        signers = {\n            $case: 'certificateIdentities',\n            certificateIdentities: {\n                identities: [\n                    {\n                        issuer: options.certificateIssuer,\n                        san: san,\n                        oids: oids,\n                    },\n                ],\n            },\n        };\n    }\n    // Construct the artifact verification options w/ defaults\n    return {\n        ctlogOptions: {\n            disable: false,\n            threshold: options.ctLogThreshold || 1,\n            detachedSct: false,\n        },\n        tlogOptions: {\n            disable: false,\n            threshold: options.tlogThreshold || 1,\n            performOnlineVerification: false,\n        },\n        signers,\n    };\n}\nexports.artifactVerificationOptions = artifactVerificationOptions;\n// Translates the IdenityProviderOptions into a list of Providers which\n// should be queried to retrieve an identity token.\nfunction identityProviders(options) {\n    const idps = [];\n    const token = options.identityToken;\n    // If an explicit identity token is provided, use that. Setup a dummy\n    // provider that just returns the token. Otherwise, setup the CI context\n    // provider and (optionally) the OAuth provider.\n    if (token) {\n        idps.push({ getToken: () => Promise.resolve(token) });\n    }\n    else {\n        idps.push(identity_1.default.ciContextProvider());\n        if (options.oidcIssuer && options.oidcClientID) {\n            idps.push(identity_1.default.oauthProvider({\n                issuer: options.oidcIssuer,\n                clientID: options.oidcClientID,\n                clientSecret: options.oidcClientSecret,\n                redirectURL: options.oidcRedirectURL,\n            }));\n        }\n    }\n    return idps;\n}\nexports.identityProviders = identityProviders;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}