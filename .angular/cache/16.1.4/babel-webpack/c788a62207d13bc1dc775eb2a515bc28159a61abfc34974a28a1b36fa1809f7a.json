{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Signed = exports.isMetadataKind = exports.MetadataKind = void 0;\nconst util_1 = __importDefault(require(\"util\"));\nconst error_1 = require(\"./error\");\nconst utils_1 = require(\"./utils\");\nconst SPECIFICATION_VERSION = ['1', '0', '31'];\nvar MetadataKind;\n(function (MetadataKind) {\n  MetadataKind[\"Root\"] = \"root\";\n  MetadataKind[\"Timestamp\"] = \"timestamp\";\n  MetadataKind[\"Snapshot\"] = \"snapshot\";\n  MetadataKind[\"Targets\"] = \"targets\";\n})(MetadataKind = exports.MetadataKind || (exports.MetadataKind = {}));\nfunction isMetadataKind(value) {\n  return typeof value === 'string' && Object.values(MetadataKind).includes(value);\n}\nexports.isMetadataKind = isMetadataKind;\n/***\n * A base class for the signed part of TUF metadata.\n *\n * Objects with base class Signed are usually included in a ``Metadata`` object\n * on the signed attribute. This class provides attributes and methods that\n * are common for all TUF metadata types (roles).\n */\nclass Signed {\n  constructor(options) {\n    this.specVersion = options.specVersion || SPECIFICATION_VERSION.join('.');\n    const specList = this.specVersion.split('.');\n    if (!(specList.length === 2 || specList.length === 3) || !specList.every(item => isNumeric(item))) {\n      throw new error_1.ValueError('Failed to parse specVersion');\n    }\n    // major version must match\n    if (specList[0] != SPECIFICATION_VERSION[0]) {\n      throw new error_1.ValueError('Unsupported specVersion');\n    }\n    this.expires = options.expires || new Date().toISOString();\n    this.version = options.version || 1;\n    this.unrecognizedFields = options.unrecognizedFields || {};\n  }\n  equals(other) {\n    if (!(other instanceof Signed)) {\n      return false;\n    }\n    return this.specVersion === other.specVersion && this.expires === other.expires && this.version === other.version && util_1.default.isDeepStrictEqual(this.unrecognizedFields, other.unrecognizedFields);\n  }\n  isExpired(referenceTime) {\n    if (!referenceTime) {\n      referenceTime = new Date();\n    }\n    return referenceTime >= new Date(this.expires);\n  }\n  static commonFieldsFromJSON(data) {\n    const {\n      spec_version,\n      expires,\n      version,\n      ...rest\n    } = data;\n    if (utils_1.guard.isDefined(spec_version) && !(typeof spec_version === 'string')) {\n      throw new TypeError('spec_version must be a string');\n    }\n    if (utils_1.guard.isDefined(expires) && !(typeof expires === 'string')) {\n      throw new TypeError('expires must be a string');\n    }\n    if (utils_1.guard.isDefined(version) && !(typeof version === 'number')) {\n      throw new TypeError('version must be a number');\n    }\n    return {\n      specVersion: spec_version,\n      expires,\n      version,\n      unrecognizedFields: rest\n    };\n  }\n}\nexports.Signed = Signed;\nfunction isNumeric(str) {\n  return !isNaN(Number(str));\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Signed","isMetadataKind","MetadataKind","util_1","require","error_1","utils_1","SPECIFICATION_VERSION","values","includes","constructor","options","specVersion","join","specList","split","length","every","item","isNumeric","ValueError","expires","Date","toISOString","version","unrecognizedFields","equals","other","default","isDeepStrictEqual","isExpired","referenceTime","commonFieldsFromJSON","data","spec_version","rest","guard","isDefined","TypeError","str","isNaN","Number"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@tufjs/models/dist/base.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Signed = exports.isMetadataKind = exports.MetadataKind = void 0;\nconst util_1 = __importDefault(require(\"util\"));\nconst error_1 = require(\"./error\");\nconst utils_1 = require(\"./utils\");\nconst SPECIFICATION_VERSION = ['1', '0', '31'];\nvar MetadataKind;\n(function (MetadataKind) {\n    MetadataKind[\"Root\"] = \"root\";\n    MetadataKind[\"Timestamp\"] = \"timestamp\";\n    MetadataKind[\"Snapshot\"] = \"snapshot\";\n    MetadataKind[\"Targets\"] = \"targets\";\n})(MetadataKind = exports.MetadataKind || (exports.MetadataKind = {}));\nfunction isMetadataKind(value) {\n    return (typeof value === 'string' &&\n        Object.values(MetadataKind).includes(value));\n}\nexports.isMetadataKind = isMetadataKind;\n/***\n * A base class for the signed part of TUF metadata.\n *\n * Objects with base class Signed are usually included in a ``Metadata`` object\n * on the signed attribute. This class provides attributes and methods that\n * are common for all TUF metadata types (roles).\n */\nclass Signed {\n    constructor(options) {\n        this.specVersion = options.specVersion || SPECIFICATION_VERSION.join('.');\n        const specList = this.specVersion.split('.');\n        if (!(specList.length === 2 || specList.length === 3) ||\n            !specList.every((item) => isNumeric(item))) {\n            throw new error_1.ValueError('Failed to parse specVersion');\n        }\n        // major version must match\n        if (specList[0] != SPECIFICATION_VERSION[0]) {\n            throw new error_1.ValueError('Unsupported specVersion');\n        }\n        this.expires = options.expires || new Date().toISOString();\n        this.version = options.version || 1;\n        this.unrecognizedFields = options.unrecognizedFields || {};\n    }\n    equals(other) {\n        if (!(other instanceof Signed)) {\n            return false;\n        }\n        return (this.specVersion === other.specVersion &&\n            this.expires === other.expires &&\n            this.version === other.version &&\n            util_1.default.isDeepStrictEqual(this.unrecognizedFields, other.unrecognizedFields));\n    }\n    isExpired(referenceTime) {\n        if (!referenceTime) {\n            referenceTime = new Date();\n        }\n        return referenceTime >= new Date(this.expires);\n    }\n    static commonFieldsFromJSON(data) {\n        const { spec_version, expires, version, ...rest } = data;\n        if (utils_1.guard.isDefined(spec_version) && !(typeof spec_version === 'string')) {\n            throw new TypeError('spec_version must be a string');\n        }\n        if (utils_1.guard.isDefined(expires) && !(typeof expires === 'string')) {\n            throw new TypeError('expires must be a string');\n        }\n        if (utils_1.guard.isDefined(version) && !(typeof version === 'number')) {\n            throw new TypeError('version must be a number');\n        }\n        return {\n            specVersion: spec_version,\n            expires,\n            version,\n            unrecognizedFields: rest,\n        };\n    }\n}\nexports.Signed = Signed;\nfunction isNumeric(str) {\n    return !isNaN(Number(str));\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}