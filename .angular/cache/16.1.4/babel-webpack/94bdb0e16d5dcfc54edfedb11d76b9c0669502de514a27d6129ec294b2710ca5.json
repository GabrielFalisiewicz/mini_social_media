{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nconst errors = require('./errors.js');\nconst {\n  Response\n} = require('minipass-fetch');\nconst defaultOpts = require('./default-opts.js');\nconst log = require('proc-log');\nconst cleanUrl = require('./clean-url.js');\n\n/* eslint-disable-next-line max-len */\nconst moreInfoUrl = 'https://github.com/npm/cli/wiki/No-auth-for-URI,-but-auth-present-for-scoped-registry';\nconst checkResponse = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* ({\n    method,\n    uri,\n    res,\n    startTime,\n    auth,\n    opts\n  }) {\n    opts = {\n      ...defaultOpts,\n      ...opts\n    };\n    if (res.headers.has('npm-notice') && !res.headers.has('x-local-cache')) {\n      log.notice('', res.headers.get('npm-notice'));\n    }\n    if (res.status >= 400) {\n      logRequest(method, res, startTime);\n      if (auth && auth.scopeAuthKey && !auth.token && !auth.auth) {\n        // we didn't have auth for THIS request, but we do have auth for\n        // requests to the registry indicated by the spec's scope value.\n        // Warn the user.\n        log.warn('registry', `No auth for URI, but auth present for scoped registry.\n\nURI: ${uri}\nScoped Registry Key: ${auth.scopeAuthKey}\n\nMore info here: ${moreInfoUrl}`);\n      }\n      return checkErrors(method, res, startTime, opts);\n    } else {\n      res.body.on('end', () => logRequest(method, res, startTime, opts));\n      if (opts.ignoreBody) {\n        res.body.resume();\n        return new Response(null, res);\n      }\n      return res;\n    }\n  });\n  return function checkResponse(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nmodule.exports = checkResponse;\nfunction logRequest(method, res, startTime) {\n  const elapsedTime = Date.now() - startTime;\n  const attempt = res.headers.get('x-fetch-attempts');\n  const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : '';\n  const cacheStatus = res.headers.get('x-local-cache-status');\n  const cacheStr = cacheStatus ? ` (cache ${cacheStatus})` : '';\n  const urlStr = cleanUrl(res.url);\n  log.http('fetch', `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`);\n}\nfunction checkErrors(method, res, startTime, opts) {\n  return res.buffer().catch(() => null).then(body => {\n    let parsed = body;\n    try {\n      parsed = JSON.parse(body.toString('utf8'));\n    } catch {\n      // ignore errors\n    }\n    if (res.status === 401 && res.headers.get('www-authenticate')) {\n      const auth = res.headers.get('www-authenticate').split(/,\\s*/).map(s => s.toLowerCase());\n      if (auth.indexOf('ipaddress') !== -1) {\n        throw new errors.HttpErrorAuthIPAddress(method, res, parsed, opts.spec);\n      } else if (auth.indexOf('otp') !== -1) {\n        throw new errors.HttpErrorAuthOTP(method, res, parsed, opts.spec);\n      } else {\n        throw new errors.HttpErrorAuthUnknown(method, res, parsed, opts.spec);\n      }\n    } else if (res.status === 401 && body != null && /one-time pass/.test(body.toString('utf8'))) {\n      // Heuristic for malformed OTP responses that don't include the\n      // www-authenticate header.\n      throw new errors.HttpErrorAuthOTP(method, res, parsed, opts.spec);\n    } else {\n      throw new errors.HttpErrorGeneral(method, res, parsed, opts.spec);\n    }\n  });\n}","map":{"version":3,"names":["_asyncToGenerator","require","default","errors","Response","defaultOpts","log","cleanUrl","moreInfoUrl","checkResponse","_ref","method","uri","res","startTime","auth","opts","headers","has","notice","get","status","logRequest","scopeAuthKey","token","warn","checkErrors","body","on","ignoreBody","resume","_x","apply","arguments","module","exports","elapsedTime","Date","now","attempt","attemptStr","cacheStatus","cacheStr","urlStr","url","http","toUpperCase","buffer","catch","then","parsed","JSON","parse","toString","split","map","s","toLowerCase","indexOf","HttpErrorAuthIPAddress","spec","HttpErrorAuthOTP","HttpErrorAuthUnknown","test","HttpErrorGeneral"],"sources":["C:/Users/GabrielFalisiewiczS/OneDrive/Dokumenty/Udemy/backend/kurs1/node_modules/npm-registry-fetch/lib/check-response.js"],"sourcesContent":["'use strict'\n\nconst errors = require('./errors.js')\nconst { Response } = require('minipass-fetch')\nconst defaultOpts = require('./default-opts.js')\nconst log = require('proc-log')\nconst cleanUrl = require('./clean-url.js')\n\n/* eslint-disable-next-line max-len */\nconst moreInfoUrl = 'https://github.com/npm/cli/wiki/No-auth-for-URI,-but-auth-present-for-scoped-registry'\nconst checkResponse =\n  async ({ method, uri, res, startTime, auth, opts }) => {\n    opts = { ...defaultOpts, ...opts }\n    if (res.headers.has('npm-notice') && !res.headers.has('x-local-cache')) {\n      log.notice('', res.headers.get('npm-notice'))\n    }\n\n    if (res.status >= 400) {\n      logRequest(method, res, startTime)\n      if (auth && auth.scopeAuthKey && !auth.token && !auth.auth) {\n      // we didn't have auth for THIS request, but we do have auth for\n      // requests to the registry indicated by the spec's scope value.\n      // Warn the user.\n        log.warn('registry', `No auth for URI, but auth present for scoped registry.\n\nURI: ${uri}\nScoped Registry Key: ${auth.scopeAuthKey}\n\nMore info here: ${moreInfoUrl}`)\n      }\n      return checkErrors(method, res, startTime, opts)\n    } else {\n      res.body.on('end', () => logRequest(method, res, startTime, opts))\n      if (opts.ignoreBody) {\n        res.body.resume()\n        return new Response(null, res)\n      }\n      return res\n    }\n  }\nmodule.exports = checkResponse\n\nfunction logRequest (method, res, startTime) {\n  const elapsedTime = Date.now() - startTime\n  const attempt = res.headers.get('x-fetch-attempts')\n  const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : ''\n  const cacheStatus = res.headers.get('x-local-cache-status')\n  const cacheStr = cacheStatus ? ` (cache ${cacheStatus})` : ''\n  const urlStr = cleanUrl(res.url)\n\n  log.http(\n    'fetch',\n    `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`\n  )\n}\n\nfunction checkErrors (method, res, startTime, opts) {\n  return res.buffer()\n    .catch(() => null)\n    .then(body => {\n      let parsed = body\n      try {\n        parsed = JSON.parse(body.toString('utf8'))\n      } catch {\n        // ignore errors\n      }\n      if (res.status === 401 && res.headers.get('www-authenticate')) {\n        const auth = res.headers.get('www-authenticate')\n          .split(/,\\s*/)\n          .map(s => s.toLowerCase())\n        if (auth.indexOf('ipaddress') !== -1) {\n          throw new errors.HttpErrorAuthIPAddress(\n            method, res, parsed, opts.spec\n          )\n        } else if (auth.indexOf('otp') !== -1) {\n          throw new errors.HttpErrorAuthOTP(\n            method, res, parsed, opts.spec\n          )\n        } else {\n          throw new errors.HttpErrorAuthUnknown(\n            method, res, parsed, opts.spec\n          )\n        }\n      } else if (\n        res.status === 401 &&\n        body != null &&\n        /one-time pass/.test(body.toString('utf8'))\n      ) {\n        // Heuristic for malformed OTP responses that don't include the\n        // www-authenticate header.\n        throw new errors.HttpErrorAuthOTP(\n          method, res, parsed, opts.spec\n        )\n      } else {\n        throw new errors.HttpErrorGeneral(\n          method, res, parsed, opts.spec\n        )\n      }\n    })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}